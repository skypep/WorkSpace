apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "bjia.phone"
        minSdkVersion 25
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // 签名信息
    signingConfigs {
        release {
            keyAlias 'st801_keystore'
            keyPassword 'st801_keystore'
            storeFile file('../st801_keystore.keystore')
            storePassword 'st801_keystore'
        }
        debug {
            keyAlias 'st801_keystore'
            keyPassword 'st801_keystore'
            storeFile file('../st801_keystore.keystore')
            storePassword 'st801_keystore'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            proto {
                srcDir 'src/main/proto'
                include '**/*.proto'
            }
            java {
                srcDirs = [
                        'src/main/java',
                        'src/main/sip/src',
//                        rootProject.projectDir.absolutePath + '/sip/src/main/java/',
                        rootProject.projectDir.absolutePath + '/phonecommon/src/main/java/',
                        rootProject.projectDir.absolutePath + '/telephonylib/src/main/java/',
                        rootProject.projectDir.absolutePath + '/ims/src/',
                        rootProject.projectDir.absolutePath + '/handware/',
                        rootProject.projectDir.absolutePath + '/telephony-common/java',
                        rootProject.projectDir.absolutePath + '/telephony-common/src/',
//                        rootProject.projectDir.absolutePath + '/settingsLib/src/main/java/',
//                        rootProject.projectDir.absolutePath + '/core/java/',
                ]
            }
            res {
                srcDirs = [
                        'src/main/res',
                        'src/main/sip/res',
//                        rootProject.projectDir.absolutePath + '/sip/src/main/res/',
                        rootProject.projectDir.absolutePath + '/phonecommon/src/main/res/',
                        rootProject.projectDir.absolutePath + '/telephonylib/src/main/res/',
//                        rootProject.projectDir.absolutePath + '/settingsLib/src/main/res/',
                ]
            }
        }
    }
}

dependencies {
    compileOnly files('libs/framework/toro.jar')
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.google.protobuf:protobuf-java:3.0.0'
}
//编写编译任务，调用plugin编译生成java文件
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.builtins {
                java {}
                // Add cpp output without any option.
                // DO NOT omit the braces if you want this builtin to be added.
                cpp {}
            }
        }
    }

    generatedFilesBaseDir = "$projectDir/src/generated"
}

preBuild {
    doLast {
        def imlFile = file(project.name + ".iml")
        println 'Change ' + project.name + '.iml order'
        try {
            def parsedXml = (new XmlParser()).parse(imlFile)
            def jdkNode = parsedXml.component[1].orderEntry.find { it.'@type' == 'jdk' }
            parsedXml.component[1].remove(jdkNode)
            def sdkString = "Android API " + android.compileSdkVersion.substring("android-".length()) + " Platform"
            new Node(parsedXml.component[1], 'orderEntry', ['type': 'jdk', 'jdkName': sdkString, 'jdkType': 'Android SDK'])
            groovy.xml.XmlUtil.serialize(parsedXml, new FileOutputStream(imlFile))
        } catch (FileNotFoundException e) {
            // nop, iml not found
        }
    }
}
