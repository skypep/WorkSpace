// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/android/dialer/logging/reporting_location.proto

#ifndef PROTOBUF_com_2fandroid_2fdialer_2flogging_2freporting_5flocation_2eproto__INCLUDED
#define PROTOBUF_com_2fandroid_2fdialer_2flogging_2freporting_5flocation_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace android {
namespace dialer {
namespace logging {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_com_2fandroid_2fdialer_2flogging_2freporting_5flocation_2eproto();
void protobuf_InitDefaults_com_2fandroid_2fdialer_2flogging_2freporting_5flocation_2eproto();
void protobuf_AssignDesc_com_2fandroid_2fdialer_2flogging_2freporting_5flocation_2eproto();
void protobuf_ShutdownFile_com_2fandroid_2fdialer_2flogging_2freporting_5flocation_2eproto();

class ReportingLocation;

enum ReportingLocation_Type {
  ReportingLocation_Type_UNKNOWN_REPORTING_LOCATION = 0,
  ReportingLocation_Type_CALL_LOG_HISTORY = 1,
  ReportingLocation_Type_FEEDBACK_PROMPT = 2
};
bool ReportingLocation_Type_IsValid(int value);
const ReportingLocation_Type ReportingLocation_Type_Type_MIN = ReportingLocation_Type_UNKNOWN_REPORTING_LOCATION;
const ReportingLocation_Type ReportingLocation_Type_Type_MAX = ReportingLocation_Type_FEEDBACK_PROMPT;
const int ReportingLocation_Type_Type_ARRAYSIZE = ReportingLocation_Type_Type_MAX + 1;

// ===================================================================

class ReportingLocation : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.android.dialer.logging.ReportingLocation) */ {
 public:
  ReportingLocation();
  virtual ~ReportingLocation();

  ReportingLocation(const ReportingLocation& from);

  inline ReportingLocation& operator=(const ReportingLocation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const ReportingLocation& default_instance();

  static const ReportingLocation* internal_default_instance();

  void Swap(ReportingLocation* other);

  // implements Message ----------------------------------------------

  inline ReportingLocation* New() const { return New(NULL); }

  ReportingLocation* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ReportingLocation& from);
  void MergeFrom(const ReportingLocation& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReportingLocation* other);
  void UnsafeMergeFrom(const ReportingLocation& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef ReportingLocation_Type Type;
  static const Type UNKNOWN_REPORTING_LOCATION =
    ReportingLocation_Type_UNKNOWN_REPORTING_LOCATION;
  static const Type CALL_LOG_HISTORY =
    ReportingLocation_Type_CALL_LOG_HISTORY;
  static const Type FEEDBACK_PROMPT =
    ReportingLocation_Type_FEEDBACK_PROMPT;
  static inline bool Type_IsValid(int value) {
    return ReportingLocation_Type_IsValid(value);
  }
  static const Type Type_MIN =
    ReportingLocation_Type_Type_MIN;
  static const Type Type_MAX =
    ReportingLocation_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    ReportingLocation_Type_Type_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:com.android.dialer.logging.ReportingLocation)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_com_2fandroid_2fdialer_2flogging_2freporting_5flocation_2eproto_impl();
  friend void  protobuf_AddDesc_com_2fandroid_2fdialer_2flogging_2freporting_5flocation_2eproto_impl();
  friend void protobuf_AssignDesc_com_2fandroid_2fdialer_2flogging_2freporting_5flocation_2eproto();
  friend void protobuf_ShutdownFile_com_2fandroid_2fdialer_2flogging_2freporting_5flocation_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReportingLocation> ReportingLocation_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ReportingLocation

inline const ReportingLocation* ReportingLocation::internal_default_instance() {
  return &ReportingLocation_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace logging
}  // namespace dialer
}  // namespace android
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::com::android::dialer::logging::ReportingLocation_Type> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_com_2fandroid_2fdialer_2flogging_2freporting_5flocation_2eproto__INCLUDED
