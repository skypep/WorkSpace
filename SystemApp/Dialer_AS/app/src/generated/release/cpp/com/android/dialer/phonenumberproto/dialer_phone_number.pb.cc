// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/android/dialer/phonenumberproto/dialer_phone_number.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "com/android/dialer/phonenumberproto/dialer_phone_number.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace android {
namespace dialer {

void protobuf_ShutdownFile_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto() {
  DialerPhoneNumber_default_instance_.Shutdown();
  DialerPhoneNumber_RawInput_default_instance_.Shutdown();
  DialerInternalPhoneNumber_default_instance_.Shutdown();
}

void protobuf_InitDefaults_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  DialerPhoneNumber_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  DialerPhoneNumber_RawInput_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  DialerInternalPhoneNumber_default_instance_.DefaultConstruct();
  DialerPhoneNumber_default_instance_.get_mutable()->InitAsDefaultInstance();
  DialerPhoneNumber_RawInput_default_instance_.get_mutable()->InitAsDefaultInstance();
  DialerInternalPhoneNumber_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto_once_);
void protobuf_InitDefaults_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto_once_,
                 &protobuf_InitDefaults_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto_impl);
}
void protobuf_AddDesc_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto_once_);
void protobuf_AddDesc_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto_once_,
                 &protobuf_AddDesc_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto_impl);
}
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto {
  StaticDescriptorInitializer_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto() {
    protobuf_AddDesc_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto();
  }
} static_descriptor_initializer_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto_;
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

static ::std::string* MutableUnknownFieldsForDialerPhoneNumber(
    DialerPhoneNumber* ptr) {
  return ptr->mutable_unknown_fields();
}

static ::std::string* MutableUnknownFieldsForDialerPhoneNumber_RawInput(
    DialerPhoneNumber_RawInput* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DialerPhoneNumber_RawInput::kNumberFieldNumber;
const int DialerPhoneNumber_RawInput::kCountryIsoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DialerPhoneNumber_RawInput::DialerPhoneNumber_RawInput()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.dialer.DialerPhoneNumber.RawInput)
}

void DialerPhoneNumber_RawInput::InitAsDefaultInstance() {
}

DialerPhoneNumber_RawInput::DialerPhoneNumber_RawInput(const DialerPhoneNumber_RawInput& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.android.dialer.DialerPhoneNumber.RawInput)
}

void DialerPhoneNumber_RawInput::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_iso_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DialerPhoneNumber_RawInput::~DialerPhoneNumber_RawInput() {
  // @@protoc_insertion_point(destructor:com.android.dialer.DialerPhoneNumber.RawInput)
  SharedDtor();
}

void DialerPhoneNumber_RawInput::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_iso_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DialerPhoneNumber_RawInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DialerPhoneNumber_RawInput& DialerPhoneNumber_RawInput::default_instance() {
  protobuf_InitDefaults_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DialerPhoneNumber_RawInput> DialerPhoneNumber_RawInput_default_instance_;

DialerPhoneNumber_RawInput* DialerPhoneNumber_RawInput::New(::google::protobuf::Arena* arena) const {
  DialerPhoneNumber_RawInput* n = new DialerPhoneNumber_RawInput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DialerPhoneNumber_RawInput::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.dialer.DialerPhoneNumber.RawInput)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_number()) {
      number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_country_iso()) {
      country_iso_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DialerPhoneNumber_RawInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForDialerPhoneNumber_RawInput, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.android.dialer.DialerPhoneNumber.RawInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string number = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_number()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_country_iso;
        break;
      }

      // optional string country_iso = 2;
      case 2: {
        if (tag == 18) {
         parse_country_iso:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country_iso()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.dialer.DialerPhoneNumber.RawInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.dialer.DialerPhoneNumber.RawInput)
  return false;
#undef DO_
}

void DialerPhoneNumber_RawInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.dialer.DialerPhoneNumber.RawInput)
  // optional string number = 1;
  if (has_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->number(), output);
  }

  // optional string country_iso = 2;
  if (has_country_iso()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->country_iso(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.dialer.DialerPhoneNumber.RawInput)
}

size_t DialerPhoneNumber_RawInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.dialer.DialerPhoneNumber.RawInput)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string number = 1;
    if (has_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->number());
    }

    // optional string country_iso = 2;
    if (has_country_iso()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country_iso());
    }

  }
  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DialerPhoneNumber_RawInput::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DialerPhoneNumber_RawInput*>(&from));
}

void DialerPhoneNumber_RawInput::MergeFrom(const DialerPhoneNumber_RawInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.dialer.DialerPhoneNumber.RawInput)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DialerPhoneNumber_RawInput::UnsafeMergeFrom(const DialerPhoneNumber_RawInput& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_number()) {
      set_has_number();
      number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.number_);
    }
    if (from.has_country_iso()) {
      set_has_country_iso();
      country_iso_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_iso_);
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void DialerPhoneNumber_RawInput::CopyFrom(const DialerPhoneNumber_RawInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.dialer.DialerPhoneNumber.RawInput)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DialerPhoneNumber_RawInput::IsInitialized() const {

  return true;
}

void DialerPhoneNumber_RawInput::Swap(DialerPhoneNumber_RawInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DialerPhoneNumber_RawInput::InternalSwap(DialerPhoneNumber_RawInput* other) {
  number_.Swap(&other->number_);
  country_iso_.Swap(&other->country_iso_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string DialerPhoneNumber_RawInput::GetTypeName() const {
  return "com.android.dialer.DialerPhoneNumber.RawInput";
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DialerPhoneNumber::kDialerInternalPhoneNumberFieldNumber;
const int DialerPhoneNumber::kRawInputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DialerPhoneNumber::DialerPhoneNumber()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.dialer.DialerPhoneNumber)
}

void DialerPhoneNumber::InitAsDefaultInstance() {
  dialer_internal_phone_number_ = const_cast< ::com::android::dialer::DialerInternalPhoneNumber*>(
      ::com::android::dialer::DialerInternalPhoneNumber::internal_default_instance());
  raw_input_ = const_cast< ::com::android::dialer::DialerPhoneNumber_RawInput*>(
      ::com::android::dialer::DialerPhoneNumber_RawInput::internal_default_instance());
}

DialerPhoneNumber::DialerPhoneNumber(const DialerPhoneNumber& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.android.dialer.DialerPhoneNumber)
}

void DialerPhoneNumber::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dialer_internal_phone_number_ = NULL;
  raw_input_ = NULL;
}

DialerPhoneNumber::~DialerPhoneNumber() {
  // @@protoc_insertion_point(destructor:com.android.dialer.DialerPhoneNumber)
  SharedDtor();
}

void DialerPhoneNumber::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &DialerPhoneNumber_default_instance_.get()) {
    delete dialer_internal_phone_number_;
    delete raw_input_;
  }
}

void DialerPhoneNumber::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DialerPhoneNumber& DialerPhoneNumber::default_instance() {
  protobuf_InitDefaults_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DialerPhoneNumber> DialerPhoneNumber_default_instance_;

DialerPhoneNumber* DialerPhoneNumber::New(::google::protobuf::Arena* arena) const {
  DialerPhoneNumber* n = new DialerPhoneNumber;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DialerPhoneNumber::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.dialer.DialerPhoneNumber)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_dialer_internal_phone_number()) {
      if (dialer_internal_phone_number_ != NULL) dialer_internal_phone_number_->::com::android::dialer::DialerInternalPhoneNumber::Clear();
    }
    if (has_raw_input()) {
      if (raw_input_ != NULL) raw_input_->::com::android::dialer::DialerPhoneNumber_RawInput::Clear();
    }
  }
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DialerPhoneNumber::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForDialerPhoneNumber, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.android.dialer.DialerPhoneNumber)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.android.dialer.DialerInternalPhoneNumber dialer_internal_phone_number = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dialer_internal_phone_number()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_raw_input;
        break;
      }

      // optional .com.android.dialer.DialerPhoneNumber.RawInput raw_input = 2;
      case 2: {
        if (tag == 18) {
         parse_raw_input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_raw_input()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.dialer.DialerPhoneNumber)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.dialer.DialerPhoneNumber)
  return false;
#undef DO_
}

void DialerPhoneNumber::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.dialer.DialerPhoneNumber)
  // optional .com.android.dialer.DialerInternalPhoneNumber dialer_internal_phone_number = 1;
  if (has_dialer_internal_phone_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->dialer_internal_phone_number_, output);
  }

  // optional .com.android.dialer.DialerPhoneNumber.RawInput raw_input = 2;
  if (has_raw_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->raw_input_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.dialer.DialerPhoneNumber)
}

size_t DialerPhoneNumber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.dialer.DialerPhoneNumber)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .com.android.dialer.DialerInternalPhoneNumber dialer_internal_phone_number = 1;
    if (has_dialer_internal_phone_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->dialer_internal_phone_number_);
    }

    // optional .com.android.dialer.DialerPhoneNumber.RawInput raw_input = 2;
    if (has_raw_input()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->raw_input_);
    }

  }
  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DialerPhoneNumber::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DialerPhoneNumber*>(&from));
}

void DialerPhoneNumber::MergeFrom(const DialerPhoneNumber& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.dialer.DialerPhoneNumber)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DialerPhoneNumber::UnsafeMergeFrom(const DialerPhoneNumber& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dialer_internal_phone_number()) {
      mutable_dialer_internal_phone_number()->::com::android::dialer::DialerInternalPhoneNumber::MergeFrom(from.dialer_internal_phone_number());
    }
    if (from.has_raw_input()) {
      mutable_raw_input()->::com::android::dialer::DialerPhoneNumber_RawInput::MergeFrom(from.raw_input());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void DialerPhoneNumber::CopyFrom(const DialerPhoneNumber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.dialer.DialerPhoneNumber)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DialerPhoneNumber::IsInitialized() const {

  if (has_dialer_internal_phone_number()) {
    if (!this->dialer_internal_phone_number_->IsInitialized()) return false;
  }
  return true;
}

void DialerPhoneNumber::Swap(DialerPhoneNumber* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DialerPhoneNumber::InternalSwap(DialerPhoneNumber* other) {
  std::swap(dialer_internal_phone_number_, other->dialer_internal_phone_number_);
  std::swap(raw_input_, other->raw_input_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string DialerPhoneNumber::GetTypeName() const {
  return "com.android.dialer.DialerPhoneNumber";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DialerPhoneNumber_RawInput

// optional string number = 1;
bool DialerPhoneNumber_RawInput::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DialerPhoneNumber_RawInput::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
void DialerPhoneNumber_RawInput::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
void DialerPhoneNumber_RawInput::clear_number() {
  number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_number();
}
const ::std::string& DialerPhoneNumber_RawInput::number() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerPhoneNumber.RawInput.number)
  return number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DialerPhoneNumber_RawInput::set_number(const ::std::string& value) {
  set_has_number();
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.dialer.DialerPhoneNumber.RawInput.number)
}
void DialerPhoneNumber_RawInput::set_number(const char* value) {
  set_has_number();
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.dialer.DialerPhoneNumber.RawInput.number)
}
void DialerPhoneNumber_RawInput::set_number(const char* value, size_t size) {
  set_has_number();
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.dialer.DialerPhoneNumber.RawInput.number)
}
::std::string* DialerPhoneNumber_RawInput::mutable_number() {
  set_has_number();
  // @@protoc_insertion_point(field_mutable:com.android.dialer.DialerPhoneNumber.RawInput.number)
  return number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DialerPhoneNumber_RawInput::release_number() {
  // @@protoc_insertion_point(field_release:com.android.dialer.DialerPhoneNumber.RawInput.number)
  clear_has_number();
  return number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DialerPhoneNumber_RawInput::set_allocated_number(::std::string* number) {
  if (number != NULL) {
    set_has_number();
  } else {
    clear_has_number();
  }
  number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), number);
  // @@protoc_insertion_point(field_set_allocated:com.android.dialer.DialerPhoneNumber.RawInput.number)
}

// optional string country_iso = 2;
bool DialerPhoneNumber_RawInput::has_country_iso() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DialerPhoneNumber_RawInput::set_has_country_iso() {
  _has_bits_[0] |= 0x00000002u;
}
void DialerPhoneNumber_RawInput::clear_has_country_iso() {
  _has_bits_[0] &= ~0x00000002u;
}
void DialerPhoneNumber_RawInput::clear_country_iso() {
  country_iso_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country_iso();
}
const ::std::string& DialerPhoneNumber_RawInput::country_iso() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerPhoneNumber.RawInput.country_iso)
  return country_iso_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DialerPhoneNumber_RawInput::set_country_iso(const ::std::string& value) {
  set_has_country_iso();
  country_iso_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.dialer.DialerPhoneNumber.RawInput.country_iso)
}
void DialerPhoneNumber_RawInput::set_country_iso(const char* value) {
  set_has_country_iso();
  country_iso_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.dialer.DialerPhoneNumber.RawInput.country_iso)
}
void DialerPhoneNumber_RawInput::set_country_iso(const char* value, size_t size) {
  set_has_country_iso();
  country_iso_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.dialer.DialerPhoneNumber.RawInput.country_iso)
}
::std::string* DialerPhoneNumber_RawInput::mutable_country_iso() {
  set_has_country_iso();
  // @@protoc_insertion_point(field_mutable:com.android.dialer.DialerPhoneNumber.RawInput.country_iso)
  return country_iso_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DialerPhoneNumber_RawInput::release_country_iso() {
  // @@protoc_insertion_point(field_release:com.android.dialer.DialerPhoneNumber.RawInput.country_iso)
  clear_has_country_iso();
  return country_iso_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DialerPhoneNumber_RawInput::set_allocated_country_iso(::std::string* country_iso) {
  if (country_iso != NULL) {
    set_has_country_iso();
  } else {
    clear_has_country_iso();
  }
  country_iso_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_iso);
  // @@protoc_insertion_point(field_set_allocated:com.android.dialer.DialerPhoneNumber.RawInput.country_iso)
}

inline const DialerPhoneNumber_RawInput* DialerPhoneNumber_RawInput::internal_default_instance() {
  return &DialerPhoneNumber_RawInput_default_instance_.get();
}
// -------------------------------------------------------------------

// DialerPhoneNumber

// optional .com.android.dialer.DialerInternalPhoneNumber dialer_internal_phone_number = 1;
bool DialerPhoneNumber::has_dialer_internal_phone_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DialerPhoneNumber::set_has_dialer_internal_phone_number() {
  _has_bits_[0] |= 0x00000001u;
}
void DialerPhoneNumber::clear_has_dialer_internal_phone_number() {
  _has_bits_[0] &= ~0x00000001u;
}
void DialerPhoneNumber::clear_dialer_internal_phone_number() {
  if (dialer_internal_phone_number_ != NULL) dialer_internal_phone_number_->::com::android::dialer::DialerInternalPhoneNumber::Clear();
  clear_has_dialer_internal_phone_number();
}
const ::com::android::dialer::DialerInternalPhoneNumber& DialerPhoneNumber::dialer_internal_phone_number() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerPhoneNumber.dialer_internal_phone_number)
  return dialer_internal_phone_number_ != NULL ? *dialer_internal_phone_number_
                         : *::com::android::dialer::DialerInternalPhoneNumber::internal_default_instance();
}
::com::android::dialer::DialerInternalPhoneNumber* DialerPhoneNumber::mutable_dialer_internal_phone_number() {
  set_has_dialer_internal_phone_number();
  if (dialer_internal_phone_number_ == NULL) {
    dialer_internal_phone_number_ = new ::com::android::dialer::DialerInternalPhoneNumber;
  }
  // @@protoc_insertion_point(field_mutable:com.android.dialer.DialerPhoneNumber.dialer_internal_phone_number)
  return dialer_internal_phone_number_;
}
::com::android::dialer::DialerInternalPhoneNumber* DialerPhoneNumber::release_dialer_internal_phone_number() {
  // @@protoc_insertion_point(field_release:com.android.dialer.DialerPhoneNumber.dialer_internal_phone_number)
  clear_has_dialer_internal_phone_number();
  ::com::android::dialer::DialerInternalPhoneNumber* temp = dialer_internal_phone_number_;
  dialer_internal_phone_number_ = NULL;
  return temp;
}
void DialerPhoneNumber::set_allocated_dialer_internal_phone_number(::com::android::dialer::DialerInternalPhoneNumber* dialer_internal_phone_number) {
  delete dialer_internal_phone_number_;
  dialer_internal_phone_number_ = dialer_internal_phone_number;
  if (dialer_internal_phone_number) {
    set_has_dialer_internal_phone_number();
  } else {
    clear_has_dialer_internal_phone_number();
  }
  // @@protoc_insertion_point(field_set_allocated:com.android.dialer.DialerPhoneNumber.dialer_internal_phone_number)
}

// optional .com.android.dialer.DialerPhoneNumber.RawInput raw_input = 2;
bool DialerPhoneNumber::has_raw_input() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DialerPhoneNumber::set_has_raw_input() {
  _has_bits_[0] |= 0x00000002u;
}
void DialerPhoneNumber::clear_has_raw_input() {
  _has_bits_[0] &= ~0x00000002u;
}
void DialerPhoneNumber::clear_raw_input() {
  if (raw_input_ != NULL) raw_input_->::com::android::dialer::DialerPhoneNumber_RawInput::Clear();
  clear_has_raw_input();
}
const ::com::android::dialer::DialerPhoneNumber_RawInput& DialerPhoneNumber::raw_input() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerPhoneNumber.raw_input)
  return raw_input_ != NULL ? *raw_input_
                         : *::com::android::dialer::DialerPhoneNumber_RawInput::internal_default_instance();
}
::com::android::dialer::DialerPhoneNumber_RawInput* DialerPhoneNumber::mutable_raw_input() {
  set_has_raw_input();
  if (raw_input_ == NULL) {
    raw_input_ = new ::com::android::dialer::DialerPhoneNumber_RawInput;
  }
  // @@protoc_insertion_point(field_mutable:com.android.dialer.DialerPhoneNumber.raw_input)
  return raw_input_;
}
::com::android::dialer::DialerPhoneNumber_RawInput* DialerPhoneNumber::release_raw_input() {
  // @@protoc_insertion_point(field_release:com.android.dialer.DialerPhoneNumber.raw_input)
  clear_has_raw_input();
  ::com::android::dialer::DialerPhoneNumber_RawInput* temp = raw_input_;
  raw_input_ = NULL;
  return temp;
}
void DialerPhoneNumber::set_allocated_raw_input(::com::android::dialer::DialerPhoneNumber_RawInput* raw_input) {
  delete raw_input_;
  raw_input_ = raw_input;
  if (raw_input) {
    set_has_raw_input();
  } else {
    clear_has_raw_input();
  }
  // @@protoc_insertion_point(field_set_allocated:com.android.dialer.DialerPhoneNumber.raw_input)
}

inline const DialerPhoneNumber* DialerPhoneNumber::internal_default_instance() {
  return &DialerPhoneNumber_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForDialerInternalPhoneNumber(
    DialerInternalPhoneNumber* ptr) {
  return ptr->mutable_unknown_fields();
}

bool DialerInternalPhoneNumber_CountryCodeSource_IsValid(int value) {
  switch (value) {
    case 1:
    case 5:
    case 10:
    case 20:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DialerInternalPhoneNumber_CountryCodeSource DialerInternalPhoneNumber::FROM_NUMBER_WITH_PLUS_SIGN;
const DialerInternalPhoneNumber_CountryCodeSource DialerInternalPhoneNumber::FROM_NUMBER_WITH_IDD;
const DialerInternalPhoneNumber_CountryCodeSource DialerInternalPhoneNumber::FROM_NUMBER_WITHOUT_PLUS_SIGN;
const DialerInternalPhoneNumber_CountryCodeSource DialerInternalPhoneNumber::FROM_DEFAULT_COUNTRY;
const DialerInternalPhoneNumber_CountryCodeSource DialerInternalPhoneNumber::CountryCodeSource_MIN;
const DialerInternalPhoneNumber_CountryCodeSource DialerInternalPhoneNumber::CountryCodeSource_MAX;
const int DialerInternalPhoneNumber::CountryCodeSource_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DialerInternalPhoneNumber::kCountryCodeFieldNumber;
const int DialerInternalPhoneNumber::kNationalNumberFieldNumber;
const int DialerInternalPhoneNumber::kExtensionFieldNumber;
const int DialerInternalPhoneNumber::kItalianLeadingZeroFieldNumber;
const int DialerInternalPhoneNumber::kNumberOfLeadingZerosFieldNumber;
const int DialerInternalPhoneNumber::kRawInputFieldNumber;
const int DialerInternalPhoneNumber::kCountryCodeSourceFieldNumber;
const int DialerInternalPhoneNumber::kPreferredDomesticCarrierCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DialerInternalPhoneNumber::DialerInternalPhoneNumber()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.dialer.DialerInternalPhoneNumber)
}

void DialerInternalPhoneNumber::InitAsDefaultInstance() {
}

DialerInternalPhoneNumber::DialerInternalPhoneNumber(const DialerInternalPhoneNumber& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.android.dialer.DialerInternalPhoneNumber)
}

void DialerInternalPhoneNumber::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extension_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raw_input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preferred_domestic_carrier_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&national_number_, 0, reinterpret_cast<char*>(&italian_leading_zero_) -
    reinterpret_cast<char*>(&national_number_) + sizeof(italian_leading_zero_));
  number_of_leading_zeros_ = 1;
  country_code_source_ = 1;
}

DialerInternalPhoneNumber::~DialerInternalPhoneNumber() {
  // @@protoc_insertion_point(destructor:com.android.dialer.DialerInternalPhoneNumber)
  SharedDtor();
}

void DialerInternalPhoneNumber::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extension_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raw_input_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preferred_domestic_carrier_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DialerInternalPhoneNumber::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DialerInternalPhoneNumber& DialerInternalPhoneNumber::default_instance() {
  protobuf_InitDefaults_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DialerInternalPhoneNumber> DialerInternalPhoneNumber_default_instance_;

DialerInternalPhoneNumber* DialerInternalPhoneNumber::New(::google::protobuf::Arena* arena) const {
  DialerInternalPhoneNumber* n = new DialerInternalPhoneNumber;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DialerInternalPhoneNumber::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.dialer.DialerInternalPhoneNumber)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DialerInternalPhoneNumber, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DialerInternalPhoneNumber*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(national_number_, italian_leading_zero_);
    if (has_extension()) {
      extension_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    number_of_leading_zeros_ = 1;
    if (has_raw_input()) {
      raw_input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    country_code_source_ = 1;
    if (has_preferred_domestic_carrier_code()) {
      preferred_domestic_carrier_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DialerInternalPhoneNumber::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForDialerInternalPhoneNumber, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.android.dialer.DialerInternalPhoneNumber)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 country_code = 1;
      case 1: {
        if (tag == 8) {
          set_has_country_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &country_code_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_national_number;
        break;
      }

      // required uint64 national_number = 2 [jstype = JS_NUMBER];
      case 2: {
        if (tag == 16) {
         parse_national_number:
          set_has_national_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &national_number_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_extension;
        break;
      }

      // optional string extension = 3;
      case 3: {
        if (tag == 26) {
         parse_extension:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extension()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_italian_leading_zero;
        break;
      }

      // optional bool italian_leading_zero = 4;
      case 4: {
        if (tag == 32) {
         parse_italian_leading_zero:
          set_has_italian_leading_zero();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &italian_leading_zero_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_raw_input;
        break;
      }

      // optional string raw_input = 5;
      case 5: {
        if (tag == 42) {
         parse_raw_input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_raw_input()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_country_code_source;
        break;
      }

      // optional .com.android.dialer.DialerInternalPhoneNumber.CountryCodeSource country_code_source = 6;
      case 6: {
        if (tag == 48) {
         parse_country_code_source:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::android::dialer::DialerInternalPhoneNumber_CountryCodeSource_IsValid(value)) {
            set_country_code_source(static_cast< ::com::android::dialer::DialerInternalPhoneNumber_CountryCodeSource >(value));
          } else {
            unknown_fields_stream.WriteVarint32(48);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_preferred_domestic_carrier_code;
        break;
      }

      // optional string preferred_domestic_carrier_code = 7;
      case 7: {
        if (tag == 58) {
         parse_preferred_domestic_carrier_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_preferred_domestic_carrier_code()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_number_of_leading_zeros;
        break;
      }

      // optional int32 number_of_leading_zeros = 8 [default = 1];
      case 8: {
        if (tag == 64) {
         parse_number_of_leading_zeros:
          set_has_number_of_leading_zeros();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_of_leading_zeros_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.dialer.DialerInternalPhoneNumber)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.dialer.DialerInternalPhoneNumber)
  return false;
#undef DO_
}

void DialerInternalPhoneNumber::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.dialer.DialerInternalPhoneNumber)
  // required int32 country_code = 1;
  if (has_country_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->country_code(), output);
  }

  // required uint64 national_number = 2 [jstype = JS_NUMBER];
  if (has_national_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->national_number(), output);
  }

  // optional string extension = 3;
  if (has_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->extension(), output);
  }

  // optional bool italian_leading_zero = 4;
  if (has_italian_leading_zero()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->italian_leading_zero(), output);
  }

  // optional string raw_input = 5;
  if (has_raw_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->raw_input(), output);
  }

  // optional .com.android.dialer.DialerInternalPhoneNumber.CountryCodeSource country_code_source = 6;
  if (has_country_code_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->country_code_source(), output);
  }

  // optional string preferred_domestic_carrier_code = 7;
  if (has_preferred_domestic_carrier_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->preferred_domestic_carrier_code(), output);
  }

  // optional int32 number_of_leading_zeros = 8 [default = 1];
  if (has_number_of_leading_zeros()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->number_of_leading_zeros(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.dialer.DialerInternalPhoneNumber)
}

size_t DialerInternalPhoneNumber::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.android.dialer.DialerInternalPhoneNumber)
  size_t total_size = 0;

  if (has_country_code()) {
    // required int32 country_code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->country_code());
  }

  if (has_national_number()) {
    // required uint64 national_number = 2 [jstype = JS_NUMBER];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->national_number());
  }

  return total_size;
}
size_t DialerInternalPhoneNumber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.dialer.DialerInternalPhoneNumber)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 country_code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->country_code());

    // required uint64 national_number = 2 [jstype = JS_NUMBER];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->national_number());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 252u) {
    // optional string extension = 3;
    if (has_extension()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extension());
    }

    // optional bool italian_leading_zero = 4;
    if (has_italian_leading_zero()) {
      total_size += 1 + 1;
    }

    // optional int32 number_of_leading_zeros = 8 [default = 1];
    if (has_number_of_leading_zeros()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->number_of_leading_zeros());
    }

    // optional string raw_input = 5;
    if (has_raw_input()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->raw_input());
    }

    // optional .com.android.dialer.DialerInternalPhoneNumber.CountryCodeSource country_code_source = 6;
    if (has_country_code_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->country_code_source());
    }

    // optional string preferred_domestic_carrier_code = 7;
    if (has_preferred_domestic_carrier_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->preferred_domestic_carrier_code());
    }

  }
  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DialerInternalPhoneNumber::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DialerInternalPhoneNumber*>(&from));
}

void DialerInternalPhoneNumber::MergeFrom(const DialerInternalPhoneNumber& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.dialer.DialerInternalPhoneNumber)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DialerInternalPhoneNumber::UnsafeMergeFrom(const DialerInternalPhoneNumber& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_country_code()) {
      set_country_code(from.country_code());
    }
    if (from.has_national_number()) {
      set_national_number(from.national_number());
    }
    if (from.has_extension()) {
      set_has_extension();
      extension_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extension_);
    }
    if (from.has_italian_leading_zero()) {
      set_italian_leading_zero(from.italian_leading_zero());
    }
    if (from.has_number_of_leading_zeros()) {
      set_number_of_leading_zeros(from.number_of_leading_zeros());
    }
    if (from.has_raw_input()) {
      set_has_raw_input();
      raw_input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raw_input_);
    }
    if (from.has_country_code_source()) {
      set_country_code_source(from.country_code_source());
    }
    if (from.has_preferred_domestic_carrier_code()) {
      set_has_preferred_domestic_carrier_code();
      preferred_domestic_carrier_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preferred_domestic_carrier_code_);
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void DialerInternalPhoneNumber::CopyFrom(const DialerInternalPhoneNumber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.dialer.DialerInternalPhoneNumber)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DialerInternalPhoneNumber::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void DialerInternalPhoneNumber::Swap(DialerInternalPhoneNumber* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DialerInternalPhoneNumber::InternalSwap(DialerInternalPhoneNumber* other) {
  std::swap(country_code_, other->country_code_);
  std::swap(national_number_, other->national_number_);
  extension_.Swap(&other->extension_);
  std::swap(italian_leading_zero_, other->italian_leading_zero_);
  std::swap(number_of_leading_zeros_, other->number_of_leading_zeros_);
  raw_input_.Swap(&other->raw_input_);
  std::swap(country_code_source_, other->country_code_source_);
  preferred_domestic_carrier_code_.Swap(&other->preferred_domestic_carrier_code_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string DialerInternalPhoneNumber::GetTypeName() const {
  return "com.android.dialer.DialerInternalPhoneNumber";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DialerInternalPhoneNumber

// required int32 country_code = 1;
bool DialerInternalPhoneNumber::has_country_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DialerInternalPhoneNumber::set_has_country_code() {
  _has_bits_[0] |= 0x00000001u;
}
void DialerInternalPhoneNumber::clear_has_country_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void DialerInternalPhoneNumber::clear_country_code() {
  country_code_ = 0;
  clear_has_country_code();
}
::google::protobuf::int32 DialerInternalPhoneNumber::country_code() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerInternalPhoneNumber.country_code)
  return country_code_;
}
void DialerInternalPhoneNumber::set_country_code(::google::protobuf::int32 value) {
  set_has_country_code();
  country_code_ = value;
  // @@protoc_insertion_point(field_set:com.android.dialer.DialerInternalPhoneNumber.country_code)
}

// required uint64 national_number = 2 [jstype = JS_NUMBER];
bool DialerInternalPhoneNumber::has_national_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DialerInternalPhoneNumber::set_has_national_number() {
  _has_bits_[0] |= 0x00000002u;
}
void DialerInternalPhoneNumber::clear_has_national_number() {
  _has_bits_[0] &= ~0x00000002u;
}
void DialerInternalPhoneNumber::clear_national_number() {
  national_number_ = GOOGLE_ULONGLONG(0);
  clear_has_national_number();
}
::google::protobuf::uint64 DialerInternalPhoneNumber::national_number() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerInternalPhoneNumber.national_number)
  return national_number_;
}
void DialerInternalPhoneNumber::set_national_number(::google::protobuf::uint64 value) {
  set_has_national_number();
  national_number_ = value;
  // @@protoc_insertion_point(field_set:com.android.dialer.DialerInternalPhoneNumber.national_number)
}

// optional string extension = 3;
bool DialerInternalPhoneNumber::has_extension() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DialerInternalPhoneNumber::set_has_extension() {
  _has_bits_[0] |= 0x00000004u;
}
void DialerInternalPhoneNumber::clear_has_extension() {
  _has_bits_[0] &= ~0x00000004u;
}
void DialerInternalPhoneNumber::clear_extension() {
  extension_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extension();
}
const ::std::string& DialerInternalPhoneNumber::extension() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerInternalPhoneNumber.extension)
  return extension_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DialerInternalPhoneNumber::set_extension(const ::std::string& value) {
  set_has_extension();
  extension_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.dialer.DialerInternalPhoneNumber.extension)
}
void DialerInternalPhoneNumber::set_extension(const char* value) {
  set_has_extension();
  extension_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.dialer.DialerInternalPhoneNumber.extension)
}
void DialerInternalPhoneNumber::set_extension(const char* value, size_t size) {
  set_has_extension();
  extension_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.dialer.DialerInternalPhoneNumber.extension)
}
::std::string* DialerInternalPhoneNumber::mutable_extension() {
  set_has_extension();
  // @@protoc_insertion_point(field_mutable:com.android.dialer.DialerInternalPhoneNumber.extension)
  return extension_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DialerInternalPhoneNumber::release_extension() {
  // @@protoc_insertion_point(field_release:com.android.dialer.DialerInternalPhoneNumber.extension)
  clear_has_extension();
  return extension_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DialerInternalPhoneNumber::set_allocated_extension(::std::string* extension) {
  if (extension != NULL) {
    set_has_extension();
  } else {
    clear_has_extension();
  }
  extension_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extension);
  // @@protoc_insertion_point(field_set_allocated:com.android.dialer.DialerInternalPhoneNumber.extension)
}

// optional bool italian_leading_zero = 4;
bool DialerInternalPhoneNumber::has_italian_leading_zero() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DialerInternalPhoneNumber::set_has_italian_leading_zero() {
  _has_bits_[0] |= 0x00000008u;
}
void DialerInternalPhoneNumber::clear_has_italian_leading_zero() {
  _has_bits_[0] &= ~0x00000008u;
}
void DialerInternalPhoneNumber::clear_italian_leading_zero() {
  italian_leading_zero_ = false;
  clear_has_italian_leading_zero();
}
bool DialerInternalPhoneNumber::italian_leading_zero() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerInternalPhoneNumber.italian_leading_zero)
  return italian_leading_zero_;
}
void DialerInternalPhoneNumber::set_italian_leading_zero(bool value) {
  set_has_italian_leading_zero();
  italian_leading_zero_ = value;
  // @@protoc_insertion_point(field_set:com.android.dialer.DialerInternalPhoneNumber.italian_leading_zero)
}

// optional int32 number_of_leading_zeros = 8 [default = 1];
bool DialerInternalPhoneNumber::has_number_of_leading_zeros() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void DialerInternalPhoneNumber::set_has_number_of_leading_zeros() {
  _has_bits_[0] |= 0x00000010u;
}
void DialerInternalPhoneNumber::clear_has_number_of_leading_zeros() {
  _has_bits_[0] &= ~0x00000010u;
}
void DialerInternalPhoneNumber::clear_number_of_leading_zeros() {
  number_of_leading_zeros_ = 1;
  clear_has_number_of_leading_zeros();
}
::google::protobuf::int32 DialerInternalPhoneNumber::number_of_leading_zeros() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerInternalPhoneNumber.number_of_leading_zeros)
  return number_of_leading_zeros_;
}
void DialerInternalPhoneNumber::set_number_of_leading_zeros(::google::protobuf::int32 value) {
  set_has_number_of_leading_zeros();
  number_of_leading_zeros_ = value;
  // @@protoc_insertion_point(field_set:com.android.dialer.DialerInternalPhoneNumber.number_of_leading_zeros)
}

// optional string raw_input = 5;
bool DialerInternalPhoneNumber::has_raw_input() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void DialerInternalPhoneNumber::set_has_raw_input() {
  _has_bits_[0] |= 0x00000020u;
}
void DialerInternalPhoneNumber::clear_has_raw_input() {
  _has_bits_[0] &= ~0x00000020u;
}
void DialerInternalPhoneNumber::clear_raw_input() {
  raw_input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_raw_input();
}
const ::std::string& DialerInternalPhoneNumber::raw_input() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerInternalPhoneNumber.raw_input)
  return raw_input_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DialerInternalPhoneNumber::set_raw_input(const ::std::string& value) {
  set_has_raw_input();
  raw_input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.dialer.DialerInternalPhoneNumber.raw_input)
}
void DialerInternalPhoneNumber::set_raw_input(const char* value) {
  set_has_raw_input();
  raw_input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.dialer.DialerInternalPhoneNumber.raw_input)
}
void DialerInternalPhoneNumber::set_raw_input(const char* value, size_t size) {
  set_has_raw_input();
  raw_input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.dialer.DialerInternalPhoneNumber.raw_input)
}
::std::string* DialerInternalPhoneNumber::mutable_raw_input() {
  set_has_raw_input();
  // @@protoc_insertion_point(field_mutable:com.android.dialer.DialerInternalPhoneNumber.raw_input)
  return raw_input_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DialerInternalPhoneNumber::release_raw_input() {
  // @@protoc_insertion_point(field_release:com.android.dialer.DialerInternalPhoneNumber.raw_input)
  clear_has_raw_input();
  return raw_input_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DialerInternalPhoneNumber::set_allocated_raw_input(::std::string* raw_input) {
  if (raw_input != NULL) {
    set_has_raw_input();
  } else {
    clear_has_raw_input();
  }
  raw_input_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), raw_input);
  // @@protoc_insertion_point(field_set_allocated:com.android.dialer.DialerInternalPhoneNumber.raw_input)
}

// optional .com.android.dialer.DialerInternalPhoneNumber.CountryCodeSource country_code_source = 6;
bool DialerInternalPhoneNumber::has_country_code_source() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void DialerInternalPhoneNumber::set_has_country_code_source() {
  _has_bits_[0] |= 0x00000040u;
}
void DialerInternalPhoneNumber::clear_has_country_code_source() {
  _has_bits_[0] &= ~0x00000040u;
}
void DialerInternalPhoneNumber::clear_country_code_source() {
  country_code_source_ = 1;
  clear_has_country_code_source();
}
::com::android::dialer::DialerInternalPhoneNumber_CountryCodeSource DialerInternalPhoneNumber::country_code_source() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerInternalPhoneNumber.country_code_source)
  return static_cast< ::com::android::dialer::DialerInternalPhoneNumber_CountryCodeSource >(country_code_source_);
}
void DialerInternalPhoneNumber::set_country_code_source(::com::android::dialer::DialerInternalPhoneNumber_CountryCodeSource value) {
  assert(::com::android::dialer::DialerInternalPhoneNumber_CountryCodeSource_IsValid(value));
  set_has_country_code_source();
  country_code_source_ = value;
  // @@protoc_insertion_point(field_set:com.android.dialer.DialerInternalPhoneNumber.country_code_source)
}

// optional string preferred_domestic_carrier_code = 7;
bool DialerInternalPhoneNumber::has_preferred_domestic_carrier_code() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void DialerInternalPhoneNumber::set_has_preferred_domestic_carrier_code() {
  _has_bits_[0] |= 0x00000080u;
}
void DialerInternalPhoneNumber::clear_has_preferred_domestic_carrier_code() {
  _has_bits_[0] &= ~0x00000080u;
}
void DialerInternalPhoneNumber::clear_preferred_domestic_carrier_code() {
  preferred_domestic_carrier_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_preferred_domestic_carrier_code();
}
const ::std::string& DialerInternalPhoneNumber::preferred_domestic_carrier_code() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerInternalPhoneNumber.preferred_domestic_carrier_code)
  return preferred_domestic_carrier_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DialerInternalPhoneNumber::set_preferred_domestic_carrier_code(const ::std::string& value) {
  set_has_preferred_domestic_carrier_code();
  preferred_domestic_carrier_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.dialer.DialerInternalPhoneNumber.preferred_domestic_carrier_code)
}
void DialerInternalPhoneNumber::set_preferred_domestic_carrier_code(const char* value) {
  set_has_preferred_domestic_carrier_code();
  preferred_domestic_carrier_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.dialer.DialerInternalPhoneNumber.preferred_domestic_carrier_code)
}
void DialerInternalPhoneNumber::set_preferred_domestic_carrier_code(const char* value, size_t size) {
  set_has_preferred_domestic_carrier_code();
  preferred_domestic_carrier_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.dialer.DialerInternalPhoneNumber.preferred_domestic_carrier_code)
}
::std::string* DialerInternalPhoneNumber::mutable_preferred_domestic_carrier_code() {
  set_has_preferred_domestic_carrier_code();
  // @@protoc_insertion_point(field_mutable:com.android.dialer.DialerInternalPhoneNumber.preferred_domestic_carrier_code)
  return preferred_domestic_carrier_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DialerInternalPhoneNumber::release_preferred_domestic_carrier_code() {
  // @@protoc_insertion_point(field_release:com.android.dialer.DialerInternalPhoneNumber.preferred_domestic_carrier_code)
  clear_has_preferred_domestic_carrier_code();
  return preferred_domestic_carrier_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DialerInternalPhoneNumber::set_allocated_preferred_domestic_carrier_code(::std::string* preferred_domestic_carrier_code) {
  if (preferred_domestic_carrier_code != NULL) {
    set_has_preferred_domestic_carrier_code();
  } else {
    clear_has_preferred_domestic_carrier_code();
  }
  preferred_domestic_carrier_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), preferred_domestic_carrier_code);
  // @@protoc_insertion_point(field_set_allocated:com.android.dialer.DialerInternalPhoneNumber.preferred_domestic_carrier_code)
}

inline const DialerInternalPhoneNumber* DialerInternalPhoneNumber::internal_default_instance() {
  return &DialerInternalPhoneNumber_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace dialer
}  // namespace android
}  // namespace com

// @@protoc_insertion_point(global_scope)
