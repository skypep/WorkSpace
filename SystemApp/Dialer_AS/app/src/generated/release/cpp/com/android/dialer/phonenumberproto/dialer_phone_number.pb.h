// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/android/dialer/phonenumberproto/dialer_phone_number.proto

#ifndef PROTOBUF_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto__INCLUDED
#define PROTOBUF_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace android {
namespace dialer {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto();
void protobuf_InitDefaults_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto();
void protobuf_AssignDesc_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto();
void protobuf_ShutdownFile_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto();

class DialerInternalPhoneNumber;
class DialerPhoneNumber;
class DialerPhoneNumber_RawInput;

enum DialerInternalPhoneNumber_CountryCodeSource {
  DialerInternalPhoneNumber_CountryCodeSource_FROM_NUMBER_WITH_PLUS_SIGN = 1,
  DialerInternalPhoneNumber_CountryCodeSource_FROM_NUMBER_WITH_IDD = 5,
  DialerInternalPhoneNumber_CountryCodeSource_FROM_NUMBER_WITHOUT_PLUS_SIGN = 10,
  DialerInternalPhoneNumber_CountryCodeSource_FROM_DEFAULT_COUNTRY = 20
};
bool DialerInternalPhoneNumber_CountryCodeSource_IsValid(int value);
const DialerInternalPhoneNumber_CountryCodeSource DialerInternalPhoneNumber_CountryCodeSource_CountryCodeSource_MIN = DialerInternalPhoneNumber_CountryCodeSource_FROM_NUMBER_WITH_PLUS_SIGN;
const DialerInternalPhoneNumber_CountryCodeSource DialerInternalPhoneNumber_CountryCodeSource_CountryCodeSource_MAX = DialerInternalPhoneNumber_CountryCodeSource_FROM_DEFAULT_COUNTRY;
const int DialerInternalPhoneNumber_CountryCodeSource_CountryCodeSource_ARRAYSIZE = DialerInternalPhoneNumber_CountryCodeSource_CountryCodeSource_MAX + 1;

// ===================================================================

class DialerPhoneNumber_RawInput : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.android.dialer.DialerPhoneNumber.RawInput) */ {
 public:
  DialerPhoneNumber_RawInput();
  virtual ~DialerPhoneNumber_RawInput();

  DialerPhoneNumber_RawInput(const DialerPhoneNumber_RawInput& from);

  inline DialerPhoneNumber_RawInput& operator=(const DialerPhoneNumber_RawInput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const DialerPhoneNumber_RawInput& default_instance();

  static const DialerPhoneNumber_RawInput* internal_default_instance();

  void Swap(DialerPhoneNumber_RawInput* other);

  // implements Message ----------------------------------------------

  inline DialerPhoneNumber_RawInput* New() const { return New(NULL); }

  DialerPhoneNumber_RawInput* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DialerPhoneNumber_RawInput& from);
  void MergeFrom(const DialerPhoneNumber_RawInput& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DialerPhoneNumber_RawInput* other);
  void UnsafeMergeFrom(const DialerPhoneNumber_RawInput& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string number = 1;
  bool has_number() const;
  void clear_number();
  static const int kNumberFieldNumber = 1;
  const ::std::string& number() const;
  void set_number(const ::std::string& value);
  void set_number(const char* value);
  void set_number(const char* value, size_t size);
  ::std::string* mutable_number();
  ::std::string* release_number();
  void set_allocated_number(::std::string* number);

  // optional string country_iso = 2;
  bool has_country_iso() const;
  void clear_country_iso();
  static const int kCountryIsoFieldNumber = 2;
  const ::std::string& country_iso() const;
  void set_country_iso(const ::std::string& value);
  void set_country_iso(const char* value);
  void set_country_iso(const char* value, size_t size);
  ::std::string* mutable_country_iso();
  ::std::string* release_country_iso();
  void set_allocated_country_iso(::std::string* country_iso);

  // @@protoc_insertion_point(class_scope:com.android.dialer.DialerPhoneNumber.RawInput)
 private:
  inline void set_has_number();
  inline void clear_has_number();
  inline void set_has_country_iso();
  inline void clear_has_country_iso();

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr number_;
  ::google::protobuf::internal::ArenaStringPtr country_iso_;
  friend void  protobuf_InitDefaults_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto_impl();
  friend void  protobuf_AddDesc_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto_impl();
  friend void protobuf_AssignDesc_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto();
  friend void protobuf_ShutdownFile_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DialerPhoneNumber_RawInput> DialerPhoneNumber_RawInput_default_instance_;

// -------------------------------------------------------------------

class DialerPhoneNumber : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.android.dialer.DialerPhoneNumber) */ {
 public:
  DialerPhoneNumber();
  virtual ~DialerPhoneNumber();

  DialerPhoneNumber(const DialerPhoneNumber& from);

  inline DialerPhoneNumber& operator=(const DialerPhoneNumber& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const DialerPhoneNumber& default_instance();

  static const DialerPhoneNumber* internal_default_instance();

  void Swap(DialerPhoneNumber* other);

  // implements Message ----------------------------------------------

  inline DialerPhoneNumber* New() const { return New(NULL); }

  DialerPhoneNumber* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DialerPhoneNumber& from);
  void MergeFrom(const DialerPhoneNumber& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DialerPhoneNumber* other);
  void UnsafeMergeFrom(const DialerPhoneNumber& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef DialerPhoneNumber_RawInput RawInput;

  // accessors -------------------------------------------------------

  // optional .com.android.dialer.DialerInternalPhoneNumber dialer_internal_phone_number = 1;
  bool has_dialer_internal_phone_number() const;
  void clear_dialer_internal_phone_number();
  static const int kDialerInternalPhoneNumberFieldNumber = 1;
  const ::com::android::dialer::DialerInternalPhoneNumber& dialer_internal_phone_number() const;
  ::com::android::dialer::DialerInternalPhoneNumber* mutable_dialer_internal_phone_number();
  ::com::android::dialer::DialerInternalPhoneNumber* release_dialer_internal_phone_number();
  void set_allocated_dialer_internal_phone_number(::com::android::dialer::DialerInternalPhoneNumber* dialer_internal_phone_number);

  // optional .com.android.dialer.DialerPhoneNumber.RawInput raw_input = 2;
  bool has_raw_input() const;
  void clear_raw_input();
  static const int kRawInputFieldNumber = 2;
  const ::com::android::dialer::DialerPhoneNumber_RawInput& raw_input() const;
  ::com::android::dialer::DialerPhoneNumber_RawInput* mutable_raw_input();
  ::com::android::dialer::DialerPhoneNumber_RawInput* release_raw_input();
  void set_allocated_raw_input(::com::android::dialer::DialerPhoneNumber_RawInput* raw_input);

  // @@protoc_insertion_point(class_scope:com.android.dialer.DialerPhoneNumber)
 private:
  inline void set_has_dialer_internal_phone_number();
  inline void clear_has_dialer_internal_phone_number();
  inline void set_has_raw_input();
  inline void clear_has_raw_input();

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::com::android::dialer::DialerInternalPhoneNumber* dialer_internal_phone_number_;
  ::com::android::dialer::DialerPhoneNumber_RawInput* raw_input_;
  friend void  protobuf_InitDefaults_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto_impl();
  friend void  protobuf_AddDesc_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto_impl();
  friend void protobuf_AssignDesc_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto();
  friend void protobuf_ShutdownFile_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DialerPhoneNumber> DialerPhoneNumber_default_instance_;

// -------------------------------------------------------------------

class DialerInternalPhoneNumber : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.android.dialer.DialerInternalPhoneNumber) */ {
 public:
  DialerInternalPhoneNumber();
  virtual ~DialerInternalPhoneNumber();

  DialerInternalPhoneNumber(const DialerInternalPhoneNumber& from);

  inline DialerInternalPhoneNumber& operator=(const DialerInternalPhoneNumber& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const DialerInternalPhoneNumber& default_instance();

  static const DialerInternalPhoneNumber* internal_default_instance();

  void Swap(DialerInternalPhoneNumber* other);

  // implements Message ----------------------------------------------

  inline DialerInternalPhoneNumber* New() const { return New(NULL); }

  DialerInternalPhoneNumber* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DialerInternalPhoneNumber& from);
  void MergeFrom(const DialerInternalPhoneNumber& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DialerInternalPhoneNumber* other);
  void UnsafeMergeFrom(const DialerInternalPhoneNumber& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef DialerInternalPhoneNumber_CountryCodeSource CountryCodeSource;
  static const CountryCodeSource FROM_NUMBER_WITH_PLUS_SIGN =
    DialerInternalPhoneNumber_CountryCodeSource_FROM_NUMBER_WITH_PLUS_SIGN;
  static const CountryCodeSource FROM_NUMBER_WITH_IDD =
    DialerInternalPhoneNumber_CountryCodeSource_FROM_NUMBER_WITH_IDD;
  static const CountryCodeSource FROM_NUMBER_WITHOUT_PLUS_SIGN =
    DialerInternalPhoneNumber_CountryCodeSource_FROM_NUMBER_WITHOUT_PLUS_SIGN;
  static const CountryCodeSource FROM_DEFAULT_COUNTRY =
    DialerInternalPhoneNumber_CountryCodeSource_FROM_DEFAULT_COUNTRY;
  static inline bool CountryCodeSource_IsValid(int value) {
    return DialerInternalPhoneNumber_CountryCodeSource_IsValid(value);
  }
  static const CountryCodeSource CountryCodeSource_MIN =
    DialerInternalPhoneNumber_CountryCodeSource_CountryCodeSource_MIN;
  static const CountryCodeSource CountryCodeSource_MAX =
    DialerInternalPhoneNumber_CountryCodeSource_CountryCodeSource_MAX;
  static const int CountryCodeSource_ARRAYSIZE =
    DialerInternalPhoneNumber_CountryCodeSource_CountryCodeSource_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // required int32 country_code = 1;
  bool has_country_code() const;
  void clear_country_code();
  static const int kCountryCodeFieldNumber = 1;
  ::google::protobuf::int32 country_code() const;
  void set_country_code(::google::protobuf::int32 value);

  // required uint64 national_number = 2 [jstype = JS_NUMBER];
  bool has_national_number() const;
  void clear_national_number();
  static const int kNationalNumberFieldNumber = 2;
  ::google::protobuf::uint64 national_number() const;
  void set_national_number(::google::protobuf::uint64 value);

  // optional string extension = 3;
  bool has_extension() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  const ::std::string& extension() const;
  void set_extension(const ::std::string& value);
  void set_extension(const char* value);
  void set_extension(const char* value, size_t size);
  ::std::string* mutable_extension();
  ::std::string* release_extension();
  void set_allocated_extension(::std::string* extension);

  // optional bool italian_leading_zero = 4;
  bool has_italian_leading_zero() const;
  void clear_italian_leading_zero();
  static const int kItalianLeadingZeroFieldNumber = 4;
  bool italian_leading_zero() const;
  void set_italian_leading_zero(bool value);

  // optional int32 number_of_leading_zeros = 8 [default = 1];
  bool has_number_of_leading_zeros() const;
  void clear_number_of_leading_zeros();
  static const int kNumberOfLeadingZerosFieldNumber = 8;
  ::google::protobuf::int32 number_of_leading_zeros() const;
  void set_number_of_leading_zeros(::google::protobuf::int32 value);

  // optional string raw_input = 5;
  bool has_raw_input() const;
  void clear_raw_input();
  static const int kRawInputFieldNumber = 5;
  const ::std::string& raw_input() const;
  void set_raw_input(const ::std::string& value);
  void set_raw_input(const char* value);
  void set_raw_input(const char* value, size_t size);
  ::std::string* mutable_raw_input();
  ::std::string* release_raw_input();
  void set_allocated_raw_input(::std::string* raw_input);

  // optional .com.android.dialer.DialerInternalPhoneNumber.CountryCodeSource country_code_source = 6;
  bool has_country_code_source() const;
  void clear_country_code_source();
  static const int kCountryCodeSourceFieldNumber = 6;
  ::com::android::dialer::DialerInternalPhoneNumber_CountryCodeSource country_code_source() const;
  void set_country_code_source(::com::android::dialer::DialerInternalPhoneNumber_CountryCodeSource value);

  // optional string preferred_domestic_carrier_code = 7;
  bool has_preferred_domestic_carrier_code() const;
  void clear_preferred_domestic_carrier_code();
  static const int kPreferredDomesticCarrierCodeFieldNumber = 7;
  const ::std::string& preferred_domestic_carrier_code() const;
  void set_preferred_domestic_carrier_code(const ::std::string& value);
  void set_preferred_domestic_carrier_code(const char* value);
  void set_preferred_domestic_carrier_code(const char* value, size_t size);
  ::std::string* mutable_preferred_domestic_carrier_code();
  ::std::string* release_preferred_domestic_carrier_code();
  void set_allocated_preferred_domestic_carrier_code(::std::string* preferred_domestic_carrier_code);

  // @@protoc_insertion_point(class_scope:com.android.dialer.DialerInternalPhoneNumber)
 private:
  inline void set_has_country_code();
  inline void clear_has_country_code();
  inline void set_has_national_number();
  inline void clear_has_national_number();
  inline void set_has_extension();
  inline void clear_has_extension();
  inline void set_has_italian_leading_zero();
  inline void clear_has_italian_leading_zero();
  inline void set_has_number_of_leading_zeros();
  inline void clear_has_number_of_leading_zeros();
  inline void set_has_raw_input();
  inline void clear_has_raw_input();
  inline void set_has_country_code_source();
  inline void clear_has_country_code_source();
  inline void set_has_preferred_domestic_carrier_code();
  inline void clear_has_preferred_domestic_carrier_code();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr extension_;
  ::google::protobuf::internal::ArenaStringPtr raw_input_;
  ::google::protobuf::internal::ArenaStringPtr preferred_domestic_carrier_code_;
  ::google::protobuf::uint64 national_number_;
  ::google::protobuf::int32 country_code_;
  bool italian_leading_zero_;
  ::google::protobuf::int32 number_of_leading_zeros_;
  int country_code_source_;
  friend void  protobuf_InitDefaults_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto_impl();
  friend void  protobuf_AddDesc_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto_impl();
  friend void protobuf_AssignDesc_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto();
  friend void protobuf_ShutdownFile_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DialerInternalPhoneNumber> DialerInternalPhoneNumber_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DialerPhoneNumber_RawInput

// optional string number = 1;
inline bool DialerPhoneNumber_RawInput::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DialerPhoneNumber_RawInput::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DialerPhoneNumber_RawInput::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DialerPhoneNumber_RawInput::clear_number() {
  number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_number();
}
inline const ::std::string& DialerPhoneNumber_RawInput::number() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerPhoneNumber.RawInput.number)
  return number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DialerPhoneNumber_RawInput::set_number(const ::std::string& value) {
  set_has_number();
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.dialer.DialerPhoneNumber.RawInput.number)
}
inline void DialerPhoneNumber_RawInput::set_number(const char* value) {
  set_has_number();
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.dialer.DialerPhoneNumber.RawInput.number)
}
inline void DialerPhoneNumber_RawInput::set_number(const char* value, size_t size) {
  set_has_number();
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.dialer.DialerPhoneNumber.RawInput.number)
}
inline ::std::string* DialerPhoneNumber_RawInput::mutable_number() {
  set_has_number();
  // @@protoc_insertion_point(field_mutable:com.android.dialer.DialerPhoneNumber.RawInput.number)
  return number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DialerPhoneNumber_RawInput::release_number() {
  // @@protoc_insertion_point(field_release:com.android.dialer.DialerPhoneNumber.RawInput.number)
  clear_has_number();
  return number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DialerPhoneNumber_RawInput::set_allocated_number(::std::string* number) {
  if (number != NULL) {
    set_has_number();
  } else {
    clear_has_number();
  }
  number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), number);
  // @@protoc_insertion_point(field_set_allocated:com.android.dialer.DialerPhoneNumber.RawInput.number)
}

// optional string country_iso = 2;
inline bool DialerPhoneNumber_RawInput::has_country_iso() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DialerPhoneNumber_RawInput::set_has_country_iso() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DialerPhoneNumber_RawInput::clear_has_country_iso() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DialerPhoneNumber_RawInput::clear_country_iso() {
  country_iso_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country_iso();
}
inline const ::std::string& DialerPhoneNumber_RawInput::country_iso() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerPhoneNumber.RawInput.country_iso)
  return country_iso_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DialerPhoneNumber_RawInput::set_country_iso(const ::std::string& value) {
  set_has_country_iso();
  country_iso_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.dialer.DialerPhoneNumber.RawInput.country_iso)
}
inline void DialerPhoneNumber_RawInput::set_country_iso(const char* value) {
  set_has_country_iso();
  country_iso_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.dialer.DialerPhoneNumber.RawInput.country_iso)
}
inline void DialerPhoneNumber_RawInput::set_country_iso(const char* value, size_t size) {
  set_has_country_iso();
  country_iso_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.dialer.DialerPhoneNumber.RawInput.country_iso)
}
inline ::std::string* DialerPhoneNumber_RawInput::mutable_country_iso() {
  set_has_country_iso();
  // @@protoc_insertion_point(field_mutable:com.android.dialer.DialerPhoneNumber.RawInput.country_iso)
  return country_iso_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DialerPhoneNumber_RawInput::release_country_iso() {
  // @@protoc_insertion_point(field_release:com.android.dialer.DialerPhoneNumber.RawInput.country_iso)
  clear_has_country_iso();
  return country_iso_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DialerPhoneNumber_RawInput::set_allocated_country_iso(::std::string* country_iso) {
  if (country_iso != NULL) {
    set_has_country_iso();
  } else {
    clear_has_country_iso();
  }
  country_iso_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_iso);
  // @@protoc_insertion_point(field_set_allocated:com.android.dialer.DialerPhoneNumber.RawInput.country_iso)
}

inline const DialerPhoneNumber_RawInput* DialerPhoneNumber_RawInput::internal_default_instance() {
  return &DialerPhoneNumber_RawInput_default_instance_.get();
}
// -------------------------------------------------------------------

// DialerPhoneNumber

// optional .com.android.dialer.DialerInternalPhoneNumber dialer_internal_phone_number = 1;
inline bool DialerPhoneNumber::has_dialer_internal_phone_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DialerPhoneNumber::set_has_dialer_internal_phone_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DialerPhoneNumber::clear_has_dialer_internal_phone_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DialerPhoneNumber::clear_dialer_internal_phone_number() {
  if (dialer_internal_phone_number_ != NULL) dialer_internal_phone_number_->::com::android::dialer::DialerInternalPhoneNumber::Clear();
  clear_has_dialer_internal_phone_number();
}
inline const ::com::android::dialer::DialerInternalPhoneNumber& DialerPhoneNumber::dialer_internal_phone_number() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerPhoneNumber.dialer_internal_phone_number)
  return dialer_internal_phone_number_ != NULL ? *dialer_internal_phone_number_
                         : *::com::android::dialer::DialerInternalPhoneNumber::internal_default_instance();
}
inline ::com::android::dialer::DialerInternalPhoneNumber* DialerPhoneNumber::mutable_dialer_internal_phone_number() {
  set_has_dialer_internal_phone_number();
  if (dialer_internal_phone_number_ == NULL) {
    dialer_internal_phone_number_ = new ::com::android::dialer::DialerInternalPhoneNumber;
  }
  // @@protoc_insertion_point(field_mutable:com.android.dialer.DialerPhoneNumber.dialer_internal_phone_number)
  return dialer_internal_phone_number_;
}
inline ::com::android::dialer::DialerInternalPhoneNumber* DialerPhoneNumber::release_dialer_internal_phone_number() {
  // @@protoc_insertion_point(field_release:com.android.dialer.DialerPhoneNumber.dialer_internal_phone_number)
  clear_has_dialer_internal_phone_number();
  ::com::android::dialer::DialerInternalPhoneNumber* temp = dialer_internal_phone_number_;
  dialer_internal_phone_number_ = NULL;
  return temp;
}
inline void DialerPhoneNumber::set_allocated_dialer_internal_phone_number(::com::android::dialer::DialerInternalPhoneNumber* dialer_internal_phone_number) {
  delete dialer_internal_phone_number_;
  dialer_internal_phone_number_ = dialer_internal_phone_number;
  if (dialer_internal_phone_number) {
    set_has_dialer_internal_phone_number();
  } else {
    clear_has_dialer_internal_phone_number();
  }
  // @@protoc_insertion_point(field_set_allocated:com.android.dialer.DialerPhoneNumber.dialer_internal_phone_number)
}

// optional .com.android.dialer.DialerPhoneNumber.RawInput raw_input = 2;
inline bool DialerPhoneNumber::has_raw_input() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DialerPhoneNumber::set_has_raw_input() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DialerPhoneNumber::clear_has_raw_input() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DialerPhoneNumber::clear_raw_input() {
  if (raw_input_ != NULL) raw_input_->::com::android::dialer::DialerPhoneNumber_RawInput::Clear();
  clear_has_raw_input();
}
inline const ::com::android::dialer::DialerPhoneNumber_RawInput& DialerPhoneNumber::raw_input() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerPhoneNumber.raw_input)
  return raw_input_ != NULL ? *raw_input_
                         : *::com::android::dialer::DialerPhoneNumber_RawInput::internal_default_instance();
}
inline ::com::android::dialer::DialerPhoneNumber_RawInput* DialerPhoneNumber::mutable_raw_input() {
  set_has_raw_input();
  if (raw_input_ == NULL) {
    raw_input_ = new ::com::android::dialer::DialerPhoneNumber_RawInput;
  }
  // @@protoc_insertion_point(field_mutable:com.android.dialer.DialerPhoneNumber.raw_input)
  return raw_input_;
}
inline ::com::android::dialer::DialerPhoneNumber_RawInput* DialerPhoneNumber::release_raw_input() {
  // @@protoc_insertion_point(field_release:com.android.dialer.DialerPhoneNumber.raw_input)
  clear_has_raw_input();
  ::com::android::dialer::DialerPhoneNumber_RawInput* temp = raw_input_;
  raw_input_ = NULL;
  return temp;
}
inline void DialerPhoneNumber::set_allocated_raw_input(::com::android::dialer::DialerPhoneNumber_RawInput* raw_input) {
  delete raw_input_;
  raw_input_ = raw_input;
  if (raw_input) {
    set_has_raw_input();
  } else {
    clear_has_raw_input();
  }
  // @@protoc_insertion_point(field_set_allocated:com.android.dialer.DialerPhoneNumber.raw_input)
}

inline const DialerPhoneNumber* DialerPhoneNumber::internal_default_instance() {
  return &DialerPhoneNumber_default_instance_.get();
}
// -------------------------------------------------------------------

// DialerInternalPhoneNumber

// required int32 country_code = 1;
inline bool DialerInternalPhoneNumber::has_country_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DialerInternalPhoneNumber::set_has_country_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DialerInternalPhoneNumber::clear_has_country_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DialerInternalPhoneNumber::clear_country_code() {
  country_code_ = 0;
  clear_has_country_code();
}
inline ::google::protobuf::int32 DialerInternalPhoneNumber::country_code() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerInternalPhoneNumber.country_code)
  return country_code_;
}
inline void DialerInternalPhoneNumber::set_country_code(::google::protobuf::int32 value) {
  set_has_country_code();
  country_code_ = value;
  // @@protoc_insertion_point(field_set:com.android.dialer.DialerInternalPhoneNumber.country_code)
}

// required uint64 national_number = 2 [jstype = JS_NUMBER];
inline bool DialerInternalPhoneNumber::has_national_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DialerInternalPhoneNumber::set_has_national_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DialerInternalPhoneNumber::clear_has_national_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DialerInternalPhoneNumber::clear_national_number() {
  national_number_ = GOOGLE_ULONGLONG(0);
  clear_has_national_number();
}
inline ::google::protobuf::uint64 DialerInternalPhoneNumber::national_number() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerInternalPhoneNumber.national_number)
  return national_number_;
}
inline void DialerInternalPhoneNumber::set_national_number(::google::protobuf::uint64 value) {
  set_has_national_number();
  national_number_ = value;
  // @@protoc_insertion_point(field_set:com.android.dialer.DialerInternalPhoneNumber.national_number)
}

// optional string extension = 3;
inline bool DialerInternalPhoneNumber::has_extension() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DialerInternalPhoneNumber::set_has_extension() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DialerInternalPhoneNumber::clear_has_extension() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DialerInternalPhoneNumber::clear_extension() {
  extension_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extension();
}
inline const ::std::string& DialerInternalPhoneNumber::extension() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerInternalPhoneNumber.extension)
  return extension_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DialerInternalPhoneNumber::set_extension(const ::std::string& value) {
  set_has_extension();
  extension_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.dialer.DialerInternalPhoneNumber.extension)
}
inline void DialerInternalPhoneNumber::set_extension(const char* value) {
  set_has_extension();
  extension_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.dialer.DialerInternalPhoneNumber.extension)
}
inline void DialerInternalPhoneNumber::set_extension(const char* value, size_t size) {
  set_has_extension();
  extension_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.dialer.DialerInternalPhoneNumber.extension)
}
inline ::std::string* DialerInternalPhoneNumber::mutable_extension() {
  set_has_extension();
  // @@protoc_insertion_point(field_mutable:com.android.dialer.DialerInternalPhoneNumber.extension)
  return extension_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DialerInternalPhoneNumber::release_extension() {
  // @@protoc_insertion_point(field_release:com.android.dialer.DialerInternalPhoneNumber.extension)
  clear_has_extension();
  return extension_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DialerInternalPhoneNumber::set_allocated_extension(::std::string* extension) {
  if (extension != NULL) {
    set_has_extension();
  } else {
    clear_has_extension();
  }
  extension_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extension);
  // @@protoc_insertion_point(field_set_allocated:com.android.dialer.DialerInternalPhoneNumber.extension)
}

// optional bool italian_leading_zero = 4;
inline bool DialerInternalPhoneNumber::has_italian_leading_zero() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DialerInternalPhoneNumber::set_has_italian_leading_zero() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DialerInternalPhoneNumber::clear_has_italian_leading_zero() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DialerInternalPhoneNumber::clear_italian_leading_zero() {
  italian_leading_zero_ = false;
  clear_has_italian_leading_zero();
}
inline bool DialerInternalPhoneNumber::italian_leading_zero() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerInternalPhoneNumber.italian_leading_zero)
  return italian_leading_zero_;
}
inline void DialerInternalPhoneNumber::set_italian_leading_zero(bool value) {
  set_has_italian_leading_zero();
  italian_leading_zero_ = value;
  // @@protoc_insertion_point(field_set:com.android.dialer.DialerInternalPhoneNumber.italian_leading_zero)
}

// optional int32 number_of_leading_zeros = 8 [default = 1];
inline bool DialerInternalPhoneNumber::has_number_of_leading_zeros() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DialerInternalPhoneNumber::set_has_number_of_leading_zeros() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DialerInternalPhoneNumber::clear_has_number_of_leading_zeros() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DialerInternalPhoneNumber::clear_number_of_leading_zeros() {
  number_of_leading_zeros_ = 1;
  clear_has_number_of_leading_zeros();
}
inline ::google::protobuf::int32 DialerInternalPhoneNumber::number_of_leading_zeros() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerInternalPhoneNumber.number_of_leading_zeros)
  return number_of_leading_zeros_;
}
inline void DialerInternalPhoneNumber::set_number_of_leading_zeros(::google::protobuf::int32 value) {
  set_has_number_of_leading_zeros();
  number_of_leading_zeros_ = value;
  // @@protoc_insertion_point(field_set:com.android.dialer.DialerInternalPhoneNumber.number_of_leading_zeros)
}

// optional string raw_input = 5;
inline bool DialerInternalPhoneNumber::has_raw_input() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DialerInternalPhoneNumber::set_has_raw_input() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DialerInternalPhoneNumber::clear_has_raw_input() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DialerInternalPhoneNumber::clear_raw_input() {
  raw_input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_raw_input();
}
inline const ::std::string& DialerInternalPhoneNumber::raw_input() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerInternalPhoneNumber.raw_input)
  return raw_input_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DialerInternalPhoneNumber::set_raw_input(const ::std::string& value) {
  set_has_raw_input();
  raw_input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.dialer.DialerInternalPhoneNumber.raw_input)
}
inline void DialerInternalPhoneNumber::set_raw_input(const char* value) {
  set_has_raw_input();
  raw_input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.dialer.DialerInternalPhoneNumber.raw_input)
}
inline void DialerInternalPhoneNumber::set_raw_input(const char* value, size_t size) {
  set_has_raw_input();
  raw_input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.dialer.DialerInternalPhoneNumber.raw_input)
}
inline ::std::string* DialerInternalPhoneNumber::mutable_raw_input() {
  set_has_raw_input();
  // @@protoc_insertion_point(field_mutable:com.android.dialer.DialerInternalPhoneNumber.raw_input)
  return raw_input_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DialerInternalPhoneNumber::release_raw_input() {
  // @@protoc_insertion_point(field_release:com.android.dialer.DialerInternalPhoneNumber.raw_input)
  clear_has_raw_input();
  return raw_input_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DialerInternalPhoneNumber::set_allocated_raw_input(::std::string* raw_input) {
  if (raw_input != NULL) {
    set_has_raw_input();
  } else {
    clear_has_raw_input();
  }
  raw_input_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), raw_input);
  // @@protoc_insertion_point(field_set_allocated:com.android.dialer.DialerInternalPhoneNumber.raw_input)
}

// optional .com.android.dialer.DialerInternalPhoneNumber.CountryCodeSource country_code_source = 6;
inline bool DialerInternalPhoneNumber::has_country_code_source() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DialerInternalPhoneNumber::set_has_country_code_source() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DialerInternalPhoneNumber::clear_has_country_code_source() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DialerInternalPhoneNumber::clear_country_code_source() {
  country_code_source_ = 1;
  clear_has_country_code_source();
}
inline ::com::android::dialer::DialerInternalPhoneNumber_CountryCodeSource DialerInternalPhoneNumber::country_code_source() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerInternalPhoneNumber.country_code_source)
  return static_cast< ::com::android::dialer::DialerInternalPhoneNumber_CountryCodeSource >(country_code_source_);
}
inline void DialerInternalPhoneNumber::set_country_code_source(::com::android::dialer::DialerInternalPhoneNumber_CountryCodeSource value) {
  assert(::com::android::dialer::DialerInternalPhoneNumber_CountryCodeSource_IsValid(value));
  set_has_country_code_source();
  country_code_source_ = value;
  // @@protoc_insertion_point(field_set:com.android.dialer.DialerInternalPhoneNumber.country_code_source)
}

// optional string preferred_domestic_carrier_code = 7;
inline bool DialerInternalPhoneNumber::has_preferred_domestic_carrier_code() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DialerInternalPhoneNumber::set_has_preferred_domestic_carrier_code() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DialerInternalPhoneNumber::clear_has_preferred_domestic_carrier_code() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DialerInternalPhoneNumber::clear_preferred_domestic_carrier_code() {
  preferred_domestic_carrier_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_preferred_domestic_carrier_code();
}
inline const ::std::string& DialerInternalPhoneNumber::preferred_domestic_carrier_code() const {
  // @@protoc_insertion_point(field_get:com.android.dialer.DialerInternalPhoneNumber.preferred_domestic_carrier_code)
  return preferred_domestic_carrier_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DialerInternalPhoneNumber::set_preferred_domestic_carrier_code(const ::std::string& value) {
  set_has_preferred_domestic_carrier_code();
  preferred_domestic_carrier_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.dialer.DialerInternalPhoneNumber.preferred_domestic_carrier_code)
}
inline void DialerInternalPhoneNumber::set_preferred_domestic_carrier_code(const char* value) {
  set_has_preferred_domestic_carrier_code();
  preferred_domestic_carrier_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.dialer.DialerInternalPhoneNumber.preferred_domestic_carrier_code)
}
inline void DialerInternalPhoneNumber::set_preferred_domestic_carrier_code(const char* value, size_t size) {
  set_has_preferred_domestic_carrier_code();
  preferred_domestic_carrier_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.dialer.DialerInternalPhoneNumber.preferred_domestic_carrier_code)
}
inline ::std::string* DialerInternalPhoneNumber::mutable_preferred_domestic_carrier_code() {
  set_has_preferred_domestic_carrier_code();
  // @@protoc_insertion_point(field_mutable:com.android.dialer.DialerInternalPhoneNumber.preferred_domestic_carrier_code)
  return preferred_domestic_carrier_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DialerInternalPhoneNumber::release_preferred_domestic_carrier_code() {
  // @@protoc_insertion_point(field_release:com.android.dialer.DialerInternalPhoneNumber.preferred_domestic_carrier_code)
  clear_has_preferred_domestic_carrier_code();
  return preferred_domestic_carrier_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DialerInternalPhoneNumber::set_allocated_preferred_domestic_carrier_code(::std::string* preferred_domestic_carrier_code) {
  if (preferred_domestic_carrier_code != NULL) {
    set_has_preferred_domestic_carrier_code();
  } else {
    clear_has_preferred_domestic_carrier_code();
  }
  preferred_domestic_carrier_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), preferred_domestic_carrier_code);
  // @@protoc_insertion_point(field_set_allocated:com.android.dialer.DialerInternalPhoneNumber.preferred_domestic_carrier_code)
}

inline const DialerInternalPhoneNumber* DialerInternalPhoneNumber::internal_default_instance() {
  return &DialerInternalPhoneNumber_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dialer
}  // namespace android
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::com::android::dialer::DialerInternalPhoneNumber_CountryCodeSource> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_com_2fandroid_2fdialer_2fphonenumberproto_2fdialer_5fphone_5fnumber_2eproto__INCLUDED
