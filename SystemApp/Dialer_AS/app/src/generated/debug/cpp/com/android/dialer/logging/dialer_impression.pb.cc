// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/android/dialer/logging/dialer_impression.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "com/android/dialer/logging/dialer_impression.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace android {
namespace dialer {
namespace logging {

void protobuf_ShutdownFile_com_2fandroid_2fdialer_2flogging_2fdialer_5fimpression_2eproto() {
  DialerImpression_default_instance_.Shutdown();
}

void protobuf_InitDefaults_com_2fandroid_2fdialer_2flogging_2fdialer_5fimpression_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  DialerImpression_default_instance_.DefaultConstruct();
  DialerImpression_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_com_2fandroid_2fdialer_2flogging_2fdialer_5fimpression_2eproto_once_);
void protobuf_InitDefaults_com_2fandroid_2fdialer_2flogging_2fdialer_5fimpression_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_com_2fandroid_2fdialer_2flogging_2fdialer_5fimpression_2eproto_once_,
                 &protobuf_InitDefaults_com_2fandroid_2fdialer_2flogging_2fdialer_5fimpression_2eproto_impl);
}
void protobuf_AddDesc_com_2fandroid_2fdialer_2flogging_2fdialer_5fimpression_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_com_2fandroid_2fdialer_2flogging_2fdialer_5fimpression_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_com_2fandroid_2fdialer_2flogging_2fdialer_5fimpression_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_com_2fandroid_2fdialer_2flogging_2fdialer_5fimpression_2eproto_once_);
void protobuf_AddDesc_com_2fandroid_2fdialer_2flogging_2fdialer_5fimpression_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_com_2fandroid_2fdialer_2flogging_2fdialer_5fimpression_2eproto_once_,
                 &protobuf_AddDesc_com_2fandroid_2fdialer_2flogging_2fdialer_5fimpression_2eproto_impl);
}
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_com_2fandroid_2fdialer_2flogging_2fdialer_5fimpression_2eproto {
  StaticDescriptorInitializer_com_2fandroid_2fdialer_2flogging_2fdialer_5fimpression_2eproto() {
    protobuf_AddDesc_com_2fandroid_2fdialer_2flogging_2fdialer_5fimpression_2eproto();
  }
} static_descriptor_initializer_com_2fandroid_2fdialer_2flogging_2fdialer_5fimpression_2eproto_;
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

static ::std::string* MutableUnknownFieldsForDialerImpression(
    DialerImpression* ptr) {
  return ptr->mutable_unknown_fields();
}

bool DialerImpression_Type_IsValid(int value) {
  switch (value) {
    case 1000:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
    case 1007:
    case 1008:
    case 1009:
    case 1010:
    case 1011:
    case 1012:
    case 1013:
    case 1014:
    case 1015:
    case 1016:
    case 1019:
    case 1020:
    case 1021:
    case 1022:
    case 1024:
    case 1025:
    case 1026:
    case 1027:
    case 1028:
    case 1029:
    case 1030:
    case 1041:
    case 1042:
    case 1043:
    case 1044:
    case 1045:
    case 1046:
    case 1047:
    case 1048:
    case 1049:
    case 1050:
    case 1051:
    case 1052:
    case 1053:
    case 1054:
    case 1055:
    case 1056:
    case 1057:
    case 1058:
    case 1059:
    case 1060:
    case 1061:
    case 1062:
    case 1063:
    case 1064:
    case 1065:
    case 1066:
    case 1067:
    case 1068:
    case 1069:
    case 1070:
    case 1071:
    case 1072:
    case 1073:
    case 1074:
    case 1075:
    case 1076:
    case 1077:
    case 1078:
    case 1079:
    case 1080:
    case 1081:
    case 1082:
    case 1083:
    case 1084:
    case 1085:
    case 1086:
    case 1087:
    case 1088:
    case 1089:
    case 1090:
    case 1091:
    case 1092:
    case 1093:
    case 1094:
    case 1095:
    case 1096:
    case 1097:
    case 1098:
    case 1099:
    case 1100:
    case 1101:
    case 1102:
    case 1103:
    case 1104:
    case 1105:
    case 1106:
    case 1107:
    case 1108:
    case 1109:
    case 1110:
    case 1111:
    case 1112:
    case 1113:
    case 1114:
    case 1115:
    case 1116:
    case 1117:
    case 1118:
    case 1119:
    case 1120:
    case 1121:
    case 1122:
    case 1123:
    case 1124:
    case 1125:
    case 1126:
    case 1127:
    case 1128:
    case 1129:
    case 1130:
    case 1131:
    case 1132:
    case 1133:
    case 1134:
    case 1135:
    case 1136:
    case 1137:
    case 1138:
    case 1139:
    case 1140:
    case 1141:
    case 1142:
    case 1143:
    case 1144:
    case 1145:
    case 1146:
    case 1147:
    case 1148:
    case 1149:
    case 1150:
    case 1151:
    case 1152:
    case 1153:
    case 1154:
    case 1155:
    case 1156:
    case 1157:
    case 1158:
    case 1159:
    case 1160:
    case 1161:
    case 1162:
    case 1163:
    case 1164:
    case 1165:
    case 1166:
    case 1167:
    case 1168:
    case 1169:
    case 1170:
    case 1171:
    case 1172:
    case 1173:
    case 1174:
    case 1175:
    case 1176:
    case 1177:
    case 1178:
    case 1179:
    case 1180:
    case 1181:
    case 1182:
    case 1183:
    case 1184:
    case 1185:
    case 1186:
    case 1187:
    case 1188:
    case 1189:
    case 1190:
    case 1191:
    case 1192:
    case 1193:
    case 1194:
    case 1195:
    case 1196:
    case 1197:
    case 1198:
    case 1199:
    case 1200:
    case 1201:
    case 1202:
    case 1203:
    case 1204:
    case 1205:
    case 1206:
    case 1207:
    case 1208:
    case 1209:
    case 1210:
    case 1211:
    case 1212:
    case 1213:
    case 1214:
    case 1215:
    case 1216:
    case 1217:
    case 1218:
    case 1219:
    case 1220:
    case 1221:
    case 1222:
    case 1223:
    case 1224:
    case 1225:
    case 1226:
    case 1227:
    case 1228:
    case 1229:
    case 1230:
    case 1231:
    case 1232:
    case 1233:
    case 1234:
    case 1235:
    case 1236:
    case 1239:
    case 1240:
    case 1241:
    case 1242:
    case 1243:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DialerImpression_Type DialerImpression::UNKNOWN_AOSP_EVENT_TYPE;
const DialerImpression_Type DialerImpression::APP_LAUNCHED;
const DialerImpression_Type DialerImpression::IN_CALL_SCREEN_TURN_ON_SPEAKERPHONE;
const DialerImpression_Type DialerImpression::IN_CALL_SCREEN_TURN_ON_WIRED_OR_EARPIECE;
const DialerImpression_Type DialerImpression::CALL_LOG_BLOCK_REPORT_SPAM;
const DialerImpression_Type DialerImpression::CALL_LOG_BLOCK_NUMBER;
const DialerImpression_Type DialerImpression::CALL_LOG_UNBLOCK_NUMBER;
const DialerImpression_Type DialerImpression::CALL_LOG_REPORT_AS_NOT_SPAM;
const DialerImpression_Type DialerImpression::DIALOG_ACTION_CONFIRM_NUMBER_NOT_SPAM;
const DialerImpression_Type DialerImpression::REPORT_AS_NOT_SPAM_VIA_UNBLOCK_NUMBER;
const DialerImpression_Type DialerImpression::DIALOG_ACTION_CONFIRM_NUMBER_SPAM_INDIRECTLY_VIA_BLOCK_NUMBER;
const DialerImpression_Type DialerImpression::REPORT_CALL_AS_SPAM_VIA_CALL_LOG_BLOCK_REPORT_SPAM_SENT_VIA_BLOCK_NUMBER_DIALOG;
const DialerImpression_Type DialerImpression::USER_ACTION_BLOCKED_NUMBER;
const DialerImpression_Type DialerImpression::USER_ACTION_UNBLOCKED_NUMBER;
const DialerImpression_Type DialerImpression::SPAM_AFTER_CALL_NOTIFICATION_BLOCK_NUMBER;
const DialerImpression_Type DialerImpression::SPAM_AFTER_CALL_NOTIFICATION_SHOW_SPAM_DIALOG;
const DialerImpression_Type DialerImpression::SPAM_AFTER_CALL_NOTIFICATION_SHOW_NON_SPAM_DIALOG;
const DialerImpression_Type DialerImpression::SPAM_AFTER_CALL_NOTIFICATION_ADD_TO_CONTACTS;
const DialerImpression_Type DialerImpression::SPAM_AFTER_CALL_NOTIFICATION_MARKED_NUMBER_AS_SPAM;
const DialerImpression_Type DialerImpression::SPAM_AFTER_CALL_NOTIFICATION_MARKED_NUMBER_AS_NOT_SPAM_AND_BLOCKED;
const DialerImpression_Type DialerImpression::SPAM_AFTER_CALL_NOTIFICATION_REPORT_NUMBER_AS_NOT_SPAM;
const DialerImpression_Type DialerImpression::SPAM_AFTER_CALL_NOTIFICATION_ON_DISMISS_SPAM_DIALOG;
const DialerImpression_Type DialerImpression::SPAM_AFTER_CALL_NOTIFICATION_ON_DISMISS_NON_SPAM_DIALOG;
const DialerImpression_Type DialerImpression::SPAM_NOTIFICATION_SERVICE_ACTION_MARK_NUMBER_AS_SPAM;
const DialerImpression_Type DialerImpression::SPAM_NOTIFICATION_SERVICE_ACTION_MARK_NUMBER_AS_NOT_SPAM;
const DialerImpression_Type DialerImpression::USER_PARTICIPATED_IN_A_CALL;
const DialerImpression_Type DialerImpression::INCOMING_SPAM_CALL;
const DialerImpression_Type DialerImpression::INCOMING_NON_SPAM_CALL;
const DialerImpression_Type DialerImpression::SPAM_NOTIFICATION_SHOWN_AFTER_THROTTLE;
const DialerImpression_Type DialerImpression::SPAM_NOTIFICATION_NOT_SHOWN_AFTER_THROTTLE;
const DialerImpression_Type DialerImpression::NON_SPAM_NOTIFICATION_SHOWN_AFTER_THROTTLE;
const DialerImpression_Type DialerImpression::NON_SPAM_NOTIFICATION_NOT_SHOWN_AFTER_THROTTLE;
const DialerImpression_Type DialerImpression::VOICEMAIL_ALERT_SET_PIN_SHOWN;
const DialerImpression_Type DialerImpression::VOICEMAIL_ALERT_SET_PIN_CLICKED;
const DialerImpression_Type DialerImpression::USER_DID_NOT_PARTICIPATE_IN_CALL;
const DialerImpression_Type DialerImpression::USER_DELETED_CALL_LOG_ITEM;
const DialerImpression_Type DialerImpression::CALL_LOG_SEND_MESSAGE;
const DialerImpression_Type DialerImpression::CALL_LOG_ADD_TO_CONTACT;
const DialerImpression_Type DialerImpression::CALL_LOG_CREATE_NEW_CONTACT;
const DialerImpression_Type DialerImpression::VOICEMAIL_DELETE_ENTRY;
const DialerImpression_Type DialerImpression::VOICEMAIL_EXPAND_ENTRY;
const DialerImpression_Type DialerImpression::VOICEMAIL_PLAY_AUDIO_DIRECTLY;
const DialerImpression_Type DialerImpression::VOICEMAIL_PLAY_AUDIO_AFTER_EXPANDING_ENTRY;
const DialerImpression_Type DialerImpression::REJECT_INCOMING_CALL_FROM_NOTIFICATION;
const DialerImpression_Type DialerImpression::REJECT_INCOMING_CALL_FROM_ANSWER_SCREEN;
const DialerImpression_Type DialerImpression::CALL_LOG_CONTEXT_MENU_BLOCK_REPORT_SPAM;
const DialerImpression_Type DialerImpression::CALL_LOG_CONTEXT_MENU_BLOCK_NUMBER;
const DialerImpression_Type DialerImpression::CALL_LOG_CONTEXT_MENU_UNBLOCK_NUMBER;
const DialerImpression_Type DialerImpression::CALL_LOG_CONTEXT_MENU_REPORT_AS_NOT_SPAM;
const DialerImpression_Type DialerImpression::NEW_CONTACT_OVERFLOW;
const DialerImpression_Type DialerImpression::NEW_CONTACT_FAB;
const DialerImpression_Type DialerImpression::VOICEMAIL_VVM3_TOS_SHOWN;
const DialerImpression_Type DialerImpression::VOICEMAIL_VVM3_TOS_ACCEPTED;
const DialerImpression_Type DialerImpression::VOICEMAIL_VVM3_TOS_DECLINED;
const DialerImpression_Type DialerImpression::VOICEMAIL_VVM3_TOS_DECLINE_CLICKED;
const DialerImpression_Type DialerImpression::VOICEMAIL_VVM3_TOS_DECLINE_CHANGE_PIN_SHOWN;
const DialerImpression_Type DialerImpression::STORAGE_PERMISSION_DISPLAYED;
const DialerImpression_Type DialerImpression::CAMERA_PERMISSION_DISPLAYED;
const DialerImpression_Type DialerImpression::STORAGE_PERMISSION_REQUESTED;
const DialerImpression_Type DialerImpression::CAMERA_PERMISSION_REQUESTED;
const DialerImpression_Type DialerImpression::STORAGE_PERMISSION_SETTINGS;
const DialerImpression_Type DialerImpression::CAMERA_PERMISSION_SETTINGS;
const DialerImpression_Type DialerImpression::STORAGE_PERMISSION_GRANTED;
const DialerImpression_Type DialerImpression::CAMERA_PERMISSION_GRANTED;
const DialerImpression_Type DialerImpression::STORAGE_PERMISSION_DENIED;
const DialerImpression_Type DialerImpression::CAMERA_PERMISSION_DENIED;
const DialerImpression_Type DialerImpression::VOICEMAIL_CONFIGURATION_STATE_CORRUPTION_DETECTED_FROM_ACTIVITY;
const DialerImpression_Type DialerImpression::VOICEMAIL_CONFIGURATION_STATE_CORRUPTION_DETECTED_FROM_NOTIFICATION;
const DialerImpression_Type DialerImpression::BACKUP_ON_BACKUP;
const DialerImpression_Type DialerImpression::BACKUP_ON_FULL_BACKUP;
const DialerImpression_Type DialerImpression::BACKUP_ON_BACKUP_DISABLED;
const DialerImpression_Type DialerImpression::BACKUP_VOICEMAIL_BACKED_UP;
const DialerImpression_Type DialerImpression::BACKUP_FULL_BACKED_UP;
const DialerImpression_Type DialerImpression::BACKUP_ON_BACKUP_JSON_EXCEPTION;
const DialerImpression_Type DialerImpression::BACKUP_ON_QUOTA_EXCEEDED;
const DialerImpression_Type DialerImpression::BACKUP_ON_RESTORE;
const DialerImpression_Type DialerImpression::BACKUP_RESTORED_FILE;
const DialerImpression_Type DialerImpression::BACKUP_RESTORED_VOICEMAIL;
const DialerImpression_Type DialerImpression::BACKUP_ON_RESTORE_FINISHED;
const DialerImpression_Type DialerImpression::BACKUP_ON_RESTORE_DISABLED;
const DialerImpression_Type DialerImpression::BACKUP_ON_RESTORE_JSON_EXCEPTION;
const DialerImpression_Type DialerImpression::BACKUP_ON_RESTORE_IO_EXCEPTION;
const DialerImpression_Type DialerImpression::BACKUP_MAX_VM_BACKUP_REACHED;
const DialerImpression_Type DialerImpression::EVENT_ANSWER_HINT_ACTIVATED;
const DialerImpression_Type DialerImpression::EVENT_ANSWER_HINT_DEACTIVATED;
const DialerImpression_Type DialerImpression::VVM_TAB_VIEWED;
const DialerImpression_Type DialerImpression::VVM_SHARE_VISIBLE;
const DialerImpression_Type DialerImpression::VVM_SHARE_PRESSED;
const DialerImpression_Type DialerImpression::OUTGOING_VIDEO_CALL;
const DialerImpression_Type DialerImpression::INCOMING_VIDEO_CALL;
const DialerImpression_Type DialerImpression::USER_PARTICIPATED_IN_A_VIDEO_CALL;
const DialerImpression_Type DialerImpression::BACKUP_ON_RESTORE_VM_DUPLICATE_NOT_RESTORING;
const DialerImpression_Type DialerImpression::CALL_LOG_SHARE_AND_CALL;
const DialerImpression_Type DialerImpression::CALL_COMPOSER_ACTIVITY_PLACE_RCS_CALL;
const DialerImpression_Type DialerImpression::CALL_COMPOSER_ACTIVITY_SEND_AND_CALL_PRESSED_WHEN_SESSION_NOT_READY;
const DialerImpression_Type DialerImpression::POST_CALL_PROMPT_USER_TO_SEND_MESSAGE_CLICKED;
const DialerImpression_Type DialerImpression::POST_CALL_PROMPT_USER_TO_SEND_MESSAGE;
const DialerImpression_Type DialerImpression::POST_CALL_PROMPT_USER_TO_VIEW_SENT_MESSAGE;
const DialerImpression_Type DialerImpression::POST_CALL_PROMPT_USER_TO_VIEW_SENT_MESSAGE_CLICKED;
const DialerImpression_Type DialerImpression::IN_CALL_SCREEN_TURN_ON_MUTE;
const DialerImpression_Type DialerImpression::IN_CALL_SCREEN_TURN_OFF_MUTE;
const DialerImpression_Type DialerImpression::IN_CALL_SCREEN_SWAP_CAMERA;
const DialerImpression_Type DialerImpression::IN_CALL_SCREEN_TURN_ON_VIDEO;
const DialerImpression_Type DialerImpression::IN_CALL_SCREEN_TURN_OFF_VIDEO;
const DialerImpression_Type DialerImpression::VIDEO_CALL_WITH_INCOMING_VOICE_CALL;
const DialerImpression_Type DialerImpression::VIDEO_CALL_WITH_INCOMING_VIDEO_CALL;
const DialerImpression_Type DialerImpression::VOICE_CALL_WITH_INCOMING_VOICE_CALL;
const DialerImpression_Type DialerImpression::VOICE_CALL_WITH_INCOMING_VIDEO_CALL;
const DialerImpression_Type DialerImpression::CALL_DETAILS_COPY_NUMBER;
const DialerImpression_Type DialerImpression::CALL_DETAILS_EDIT_BEFORE_CALL;
const DialerImpression_Type DialerImpression::CALL_DETAILS_CALL_BACK;
const DialerImpression_Type DialerImpression::VVM_USER_DISMISSED_VM_ALMOST_FULL_PROMO;
const DialerImpression_Type DialerImpression::VVM_USER_DISMISSED_VM_FULL_PROMO;
const DialerImpression_Type DialerImpression::VVM_USER_ENABLED_ARCHIVE_FROM_VM_ALMOST_FULL_PROMO;
const DialerImpression_Type DialerImpression::VVM_USER_ENABLED_ARCHIVE_FROM_VM_FULL_PROMO;
const DialerImpression_Type DialerImpression::VVM_USER_SHOWN_VM_ALMOST_FULL_PROMO;
const DialerImpression_Type DialerImpression::VVM_USER_SHOWN_VM_FULL_PROMO;
const DialerImpression_Type DialerImpression::VVM_USER_SHOWN_VM_ALMOST_FULL_ERROR_MESSAGE;
const DialerImpression_Type DialerImpression::VVM_USER_SHOWN_VM_FULL_ERROR_MESSAGE;
const DialerImpression_Type DialerImpression::VVM_USER_TURNED_ARCHIVE_ON_FROM_SETTINGS;
const DialerImpression_Type DialerImpression::VVM_USER_TURNED_ARCHIVE_OFF_FROM_SETTINGS;
const DialerImpression_Type DialerImpression::VVM_ARCHIVE_AUTO_DELETED_VM_FROM_SERVER;
const DialerImpression_Type DialerImpression::VVM_ARCHIVE_AUTO_DELETE_TURNED_OFF;
const DialerImpression_Type DialerImpression::VVM_TAB_VISIBLE;
const DialerImpression_Type DialerImpression::VVM_UNBUNDLED_EVENT_RECEIVED;
const DialerImpression_Type DialerImpression::VVM_ACTIVATION_STARTED;
const DialerImpression_Type DialerImpression::VVM_ACTIVATION_COMPLETED;
const DialerImpression_Type DialerImpression::VVM_AUTO_RETRY_ACTIVATION;
const DialerImpression_Type DialerImpression::VVM_PROVISIONING_STARTED;
const DialerImpression_Type DialerImpression::VVM_PROVISIONING_COMPLETED;
const DialerImpression_Type DialerImpression::VVM_SYNC_STARTED;
const DialerImpression_Type DialerImpression::VVM_SYNC_COMPLETED;
const DialerImpression_Type DialerImpression::VVM_AUTO_RETRY_SYNC;
const DialerImpression_Type DialerImpression::VVM_USER_RETRY;
const DialerImpression_Type DialerImpression::VVM_USER_SYNC;
const DialerImpression_Type DialerImpression::VVM_SETTINGS_VIEWED;
const DialerImpression_Type DialerImpression::VVM_CHANGE_PIN_CLICKED;
const DialerImpression_Type DialerImpression::VVM_CHANGE_PIN_COMPLETED;
const DialerImpression_Type DialerImpression::VVM_CHANGE_RINGTONE_CLICKED;
const DialerImpression_Type DialerImpression::VVM_CHANGE_VIBRATION_CLICKED;
const DialerImpression_Type DialerImpression::VVM_USER_ENABLED_IN_SETTINGS;
const DialerImpression_Type DialerImpression::VVM_USER_DISABLED_IN_SETTINGS;
const DialerImpression_Type DialerImpression::VVM_ADVANCED_SETINGS_CLICKED;
const DialerImpression_Type DialerImpression::VVM_NOTIFICATION_CLICKED;
const DialerImpression_Type DialerImpression::VVM_NOTIFICATION_CREATED;
const DialerImpression_Type DialerImpression::VVM_NOTIFICATION_CREATED_WITH_TRANSCRIPTION;
const DialerImpression_Type DialerImpression::VVM_TRANSCRIPTION_DOWNLOADED;
const DialerImpression_Type DialerImpression::VVM_CHANGE_AIRPLANE_MODE_CLICKED;
const DialerImpression_Type DialerImpression::VVM_CALL_VOICEMAIL_CLICKED;
const DialerImpression_Type DialerImpression::VVM_QUOTA_CHECK_UNAVAILABLE;
const DialerImpression_Type DialerImpression::EMERGENCY_NEW_EMERGENCY_CALL;
const DialerImpression_Type DialerImpression::EMERGENCY_CALLBACK;
const DialerImpression_Type DialerImpression::EMERGENCY_NO_LOCATION_PERMISSION;
const DialerImpression_Type DialerImpression::EMERGENCY_BATTERY_TOO_LOW_TO_GET_LOCATION;
const DialerImpression_Type DialerImpression::EMERGENCY_CANT_GET_LOCATION;
const DialerImpression_Type DialerImpression::EMERGENCY_STALE_LOCATION;
const DialerImpression_Type DialerImpression::EMERGENCY_INACCURATE_LOCATION;
const DialerImpression_Type DialerImpression::EMERGENCY_GOT_LOCATION;
const DialerImpression_Type DialerImpression::EMERGENCY_GOT_ADDRESS;
const DialerImpression_Type DialerImpression::EMERGENCY_GOT_MAP;
const DialerImpression_Type DialerImpression::EMERGENCY_LAUNCHED_MAP;
const DialerImpression_Type DialerImpression::VIDEO_CALL_UPGRADE_REQUESTED;
const DialerImpression_Type DialerImpression::VIDEO_CALL_REQUEST_ACCEPTED;
const DialerImpression_Type DialerImpression::VIDEO_CALL_REQUEST_ACCEPTED_AS_AUDIO;
const DialerImpression_Type DialerImpression::VIDEO_CALL_REQUEST_DECLINED;
const DialerImpression_Type DialerImpression::VIDEO_CALL_REQUEST_RECEIVED;
const DialerImpression_Type DialerImpression::RCS_VIDEO_SHARE_UPGRADE_REQUESTED;
const DialerImpression_Type DialerImpression::RCS_VIDEO_SHARE_REQUEST_ACCEPTED;
const DialerImpression_Type DialerImpression::RCS_VIDEO_SHARE_REQUEST_DECLINED;
const DialerImpression_Type DialerImpression::RCS_VIDEO_SHARE_REQUEST_RECEIVED;
const DialerImpression_Type DialerImpression::IMS_VIDEO_UPGRADE_REQUESTED;
const DialerImpression_Type DialerImpression::IMS_VIDEO_REQUEST_ACCEPTED;
const DialerImpression_Type DialerImpression::IMS_VIDEO_REQUEST_ACCEPTED_AS_AUDIO;
const DialerImpression_Type DialerImpression::IMS_VIDEO_REQUEST_DECLINED;
const DialerImpression_Type DialerImpression::IMS_VIDEO_REQUEST_RECEIVED;
const DialerImpression_Type DialerImpression::VVM_STATUS_CHECK_READY;
const DialerImpression_Type DialerImpression::VVM_STATUS_CHECK_REACTIVATION;
const DialerImpression_Type DialerImpression::VVM_ARCHIVE_AUTO_DELETE_FAILED_DUE_TO_FAILED_QUOTA_CHECK;
const DialerImpression_Type DialerImpression::BUBBLE_TURN_ON_SPEAKERPHONE;
const DialerImpression_Type DialerImpression::BUBBLE_TURN_ON_WIRED_OR_EARPIECE;
const DialerImpression_Type DialerImpression::BUBBLE_MUTE_CALL;
const DialerImpression_Type DialerImpression::BUBBLE_UNMUTE_CALL;
const DialerImpression_Type DialerImpression::BUBBLE_END_CALL;
const DialerImpression_Type DialerImpression::LIGHTBRINGER_VIDEO_REQUESTED_FROM_SEARCH;
const DialerImpression_Type DialerImpression::LIGHTBRINGER_VIDEO_REQUESTED_FROM_CALL_LOG;
const DialerImpression_Type DialerImpression::IMS_VIDEO_REQUESTED_FROM_SEARCH;
const DialerImpression_Type DialerImpression::IMS_VIDEO_REQUESTED_FROM_CALL_LOG;
const DialerImpression_Type DialerImpression::MULTISELECT_LONG_PRESS_ENTER_MULTI_SELECT_MODE;
const DialerImpression_Type DialerImpression::MULTISELECT_LONG_PRESS_TAP_ENTRY;
const DialerImpression_Type DialerImpression::MULTISELECT_SINGLE_PRESS_SELECT_ENTRY;
const DialerImpression_Type DialerImpression::MULTISELECT_SINGLE_PRESS_UNSELECT_ENTRY;
const DialerImpression_Type DialerImpression::MULTISELECT_SINGLE_PRESS_TAP_VIA_CONTACT_BADGE;
const DialerImpression_Type DialerImpression::MULTISELECT_SELECT_ALL;
const DialerImpression_Type DialerImpression::MULTISELECT_UNSELECT_ALL;
const DialerImpression_Type DialerImpression::MULTISELECT_TAP_DELETE_ICON;
const DialerImpression_Type DialerImpression::MULTISELECT_DISPLAY_DELETE_CONFIRMATION_DIALOG;
const DialerImpression_Type DialerImpression::MULTISELECT_DELETE_ENTRY_VIA_CONFIRMATION_DIALOG;
const DialerImpression_Type DialerImpression::MULTISELECT_CANCEL_CONFIRMATION_DIALOG_VIA_CANCEL_BUTTON;
const DialerImpression_Type DialerImpression::MULTISELECT_CANCEL_CONFIRMATION_DIALOG_VIA_CANCEL_TOUCH;
const DialerImpression_Type DialerImpression::MULTISELECT_ROTATE_AND_SHOW_ACTION_MODE;
const DialerImpression_Type DialerImpression::VOICEMAIL_VVM3_TOS_V2_CREATED;
const DialerImpression_Type DialerImpression::VOICEMAIL_VVM3_TOS_V2_ACCEPTED;
const DialerImpression_Type DialerImpression::VOICEMAIL_VVM3_TOS_V2_DECLINE_CLICKED;
const DialerImpression_Type DialerImpression::VOICEMAIL_DIALER_TOS_CREATED;
const DialerImpression_Type DialerImpression::VOICEMAIL_DIALER_TOS_ACCEPTED;
const DialerImpression_Type DialerImpression::VOICEMAIL_DIALER_TOS_DECLINE_CLICKED;
const DialerImpression_Type DialerImpression::CREATE_NEW_CONTACT_FROM_CALL_LOG;
const DialerImpression_Type DialerImpression::CREATE_NEW_CONTACT_FROM_DIALPAD;
const DialerImpression_Type DialerImpression::CREATE_NEW_CONTACT_FROM_VOICEMAIL;
const DialerImpression_Type DialerImpression::CREATE_NEW_CONTACT_FROM_CALL_HISTORY;
const DialerImpression_Type DialerImpression::ADD_TO_A_CONTACT_FROM_CALL_LOG;
const DialerImpression_Type DialerImpression::ADD_TO_A_CONTACT_FROM_DIALPAD;
const DialerImpression_Type DialerImpression::ADD_TO_A_CONTACT_FROM_VOICEMAIL;
const DialerImpression_Type DialerImpression::ADD_TO_A_CONTACT_FROM_CALL_HISTORY;
const DialerImpression_Type DialerImpression::CALLER_ID_REPORTED;
const DialerImpression_Type DialerImpression::CALLER_ID_REPORT_FAILED;
const DialerImpression_Type DialerImpression::VVM_TRANSCRIPTION_REQUEST_SENT;
const DialerImpression_Type DialerImpression::VVM_TRANSCRIPTION_REQUEST_RETRY;
const DialerImpression_Type DialerImpression::VVM_TRANSCRIPTION_RESPONSE_SUCCESS;
const DialerImpression_Type DialerImpression::VVM_TRANSCRIPTION_RESPONSE_EMPTY;
const DialerImpression_Type DialerImpression::VVM_TRANSCRIPTION_RESPONSE_INVALID;
const DialerImpression_Type DialerImpression::VVM_TRANSCRIPTION_RESPONSE_RECOVERABLE_ERROR;
const DialerImpression_Type DialerImpression::VVM_TRANSCRIPTION_RESPONSE_FATAL_ERROR;
const DialerImpression_Type DialerImpression::UPGRADE_TO_VIDEO_CALL_BUTTON_SHOWN;
const DialerImpression_Type DialerImpression::BACKUP_KEY_VALUE_ON_BACKUP;
const DialerImpression_Type DialerImpression::BACKUP_KEY_VALUE_ON_RESTORE;
const DialerImpression_Type DialerImpression::BACKUP_KEY_VALUE_ON_RESTORE_FINISHED;
const DialerImpression_Type DialerImpression::BACKUP_KEY_VALUE_GET_BACKUP_SPECIFICATION;
const DialerImpression_Type DialerImpression::BACKUP_KEY_VALUE_BACKUP_AGENT_CONSTRUCTOR;
const DialerImpression_Type DialerImpression::Type_MIN;
const DialerImpression_Type DialerImpression::Type_MAX;
const int DialerImpression::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DialerImpression::DialerImpression()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_com_2fandroid_2fdialer_2flogging_2fdialer_5fimpression_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.dialer.logging.DialerImpression)
}

void DialerImpression::InitAsDefaultInstance() {
}

DialerImpression::DialerImpression(const DialerImpression& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.android.dialer.logging.DialerImpression)
}

void DialerImpression::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DialerImpression::~DialerImpression() {
  // @@protoc_insertion_point(destructor:com.android.dialer.logging.DialerImpression)
  SharedDtor();
}

void DialerImpression::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DialerImpression::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DialerImpression& DialerImpression::default_instance() {
  protobuf_InitDefaults_com_2fandroid_2fdialer_2flogging_2fdialer_5fimpression_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DialerImpression> DialerImpression_default_instance_;

DialerImpression* DialerImpression::New(::google::protobuf::Arena* arena) const {
  DialerImpression* n = new DialerImpression;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DialerImpression::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.dialer.logging.DialerImpression)
  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DialerImpression::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForDialerImpression, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:com.android.dialer.logging.DialerImpression)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(
        input, tag, &unknown_fields_stream));
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.dialer.logging.DialerImpression)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.dialer.logging.DialerImpression)
  return false;
#undef DO_
}

void DialerImpression::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.dialer.logging.DialerImpression)
  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.dialer.logging.DialerImpression)
}

size_t DialerImpression::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.dialer.logging.DialerImpression)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DialerImpression::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DialerImpression*>(&from));
}

void DialerImpression::MergeFrom(const DialerImpression& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.dialer.logging.DialerImpression)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DialerImpression::UnsafeMergeFrom(const DialerImpression& from) {
  GOOGLE_DCHECK(&from != this);
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void DialerImpression::CopyFrom(const DialerImpression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.dialer.logging.DialerImpression)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DialerImpression::IsInitialized() const {

  return true;
}

void DialerImpression::Swap(DialerImpression* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DialerImpression::InternalSwap(DialerImpression* other) {
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string DialerImpression::GetTypeName() const {
  return "com.android.dialer.logging.DialerImpression";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DialerImpression

inline const DialerImpression* DialerImpression::internal_default_instance() {
  return &DialerImpression_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace logging
}  // namespace dialer
}  // namespace android
}  // namespace com

// @@protoc_insertion_point(global_scope)
